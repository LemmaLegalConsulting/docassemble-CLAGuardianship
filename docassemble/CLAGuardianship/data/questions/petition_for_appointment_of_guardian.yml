---
translations:
  - petition_for_appointment_of_guardian_es.xlsx
---
include:
  - docassemble.ALAffidavitOfIndigency:affidavit_body.yml
  - docassemble.AssemblyLine:assembly_line.yml
  - affidavit_disclosing_care_or_custody.yml
  - shared.yml
  - Bond_MPC_801.yml
  - military_affidavit.yml
  - consent_to_nomination_by_a_minor.yml
  - parental_consent_to_petition.yml
  - temporary_guardian.yml
  - customized_screens.yml
  - review_petition_for_appointment_of_guardian.yml
---
modules:
  - docassemble.ALToolbox.al_income
---
metadata:
  title: >-
    Petition for Guardianship of a Minor
  short title: >-
    Minor Guardianship
  description: |-
    If you are or if you know a minor who needs a responsible adult to make decisions
    for them other than their parent or their current guardian, you can use this interview 
    to ask the court to appoint a guardian.

    The guardian can make decisions about the minor's health, education, finances, and
    general welfare in place of the minor's parent.
  can_I_use_this_form: |
    You can use this interview if you are **either**:

    * An adult who cares about a minor's well-being; **or**
    * A minor who is 14 or older.

    If you are under 14, you will need an adult to help you answer the questions in this interview.
    
    **If you are a parent and your child needs a guardian,** you should have the adult
    that you want to be the guardian use this interview. You cannot use this interview if
    you are the parent of the minor.

    You may also want to use the [Care Type Finder](https://apps.suffolklitlab.org/start/care_type_finder) to decide if guardianship is the right
    choice.
  before_you_start: |
    Before you start, you may want to use the [Care Type Finder](https://apps.suffolklitlab.org/start/care_type_finder) to decide if guardianship is the right choice.

    You will need to gather information about:

    1. The minor's parents, including name, contact information, and whether they are living.
    2. Anyone else who has taken care of the minor over the last 60 days.
    3. Any bank accounts and other property that the minor owns.
    4. Any current and past court cases that have to do with the minor.
    5. Your own financial information, unless you are the minor.
    6. The names and contact information of the person you want to be the guardian.
    7. Information about whether the parent and the minor will agree to the guardianship.
  LIST_topics:
    - ES-03-03-00-00
    - FA-04-00-00-00
  tags:
    - ES-03-03-00-00
    - FA-04-00-00-00
  authors:
    - Quinten Steenhuis
    - Rami Lorca
  allowed_courts:
    - "Probate and Family Court"
  typical_role: "plaintiff"
  al_weaver_version: "1.10.3"
  generated_on: "2024-02-20"
  form_titles:
    - Petition for Appointment of Guardian of a Minor
    - Motion to Appoint Temporary Guardian
    - Bond (MPC 801)
    - Military Affidavit
    - Child Care or Custody Disclosure Affidavit
    - Affidavit of Indigency
  form_numbers:
    - MPC 140
    - OCAJ-1
    - TC0002
    - MCP 263
    - MPC 340
    - MPC 801
    - TC0050 (06/24)
  update_notes: |
    2024-11-03 Initial version
    2024-12-19 Updated with new Care and Custody Disclosure Affidavity
  jurisdiction: NAM-US-US+MA
  help_page_url: https://www.masslegalhelp.org/children-families-divorce/guardians-other-caregivers/guardianship-minor-overview
  help_page_title: "Guardianship of a Minor: An Overview"

---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MA"
---
code: |
  github_repo_name = 'docassemble-CLAGuardianship'
---
code: |
  interview_short_title = "Ask the court for a guardian for a minor"
---
language: es
code: |
  interview_short_title = "Pida al tribunal un tutor para un menor"
---
code: |
  al_form_type = "starts_case"
---
objects:
  - parents: ALPeopleList.using(ask_number=True, complete_attribute="complete")
  - other_custodians: ALPeopleList.using(ask_number=True, complete_attribute="complete")
  - relatives: ALPeopleList.using(maximum_number=2, complete_attribute="complete")
  - assets: ALAssetList.using(complete_attribute='complete')
  - children: ALPeopleList.using(ask_number=True, target_number=1, complete_attribute="complete")
---
code: |
  enable_al_nav_sections = True
---
code: |
  al_interview_languages = ["en", "es"]
---
depends on:
  - who_is_making_petition
variable name: al_nav_sections
data:
  - review_case_information: About the case
  - review_petitioner_information: Petitioners
  - review_parents_information: Minor's Parents
  - review_requests: What you need
  - review_minors_guardianship: History
  - review_minor_assets: Assets
  - review_additional_requests: Additional Requests
  - review_affidavit_disclosing_care_or_custody: Child Care or Custody Disclosure Affidavit
  - review_military_affidavit: Military affidavit
  - section_fee_waiver: Fee waiver
    hidden: |
      showifdef("who_is_making_petition") == "minor"
  #- review_bond: Bond
  - review_petition_for_appointment_of_guardian: Review your answers
  - section_download_petition: Download and print
  - review_full: "✎ <u>Review / Edit</u>"
---
language: es
depends on:
  - who_is_making_petition
variable name: al_nav_sections
data:
  - review_case_information: Acerca del caso
  - review_petitioner_information: Solicitantes
  - review_parents_information: Padres del menor
  - review_requests: Lo que necesitas
  - review_minors_guardianship: Historia
  - review_minor_assets: Bienes
  - review_additional_requests: Solicitudes adicionales
  - review_affidavit_disclosing_care_or_custody: Declaración de cuidado o custodia del menor
  - review_military_affidavit: Declaración militar
  - section_fee_waiver: Exención de tarifas
    hidden: |
      showifdef("who_is_making_petition") == "minor"
  #- review_bond: Bond
  - review_petition_for_appointment_of_guardian: Revisar tus respuestas
  - section_download_petition: Descargar e imprimir
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_petition_for_appointment_of_guardian
code: |
  # Set the allowed courts for this interview
  allowed_courts = ['Probate and Family Court']

  nav.set_section('review_full')
  nav.set_section("review_case_information")
  form_filled_by_attorney

  who_is_making_petition
  if who_is_making_petition == "minor":
    if children[0].age_in_years() < 14:
      warn_minor_too_young

  if current_acting_guardian:
    existing_guardians_or_conservators_kickout
    
  children.gather()
  trial_court

  nav.set_section("review_petitioner_information")
  if who_is_making_petition == "interested_party": 
    users.gather()
  else:
    set_user_to_minor

  nav.set_section("review_parents_information")
  parents.gather()

  for parent in parents:
    if not parent.is_deceased and parent.agrees_to_guardianship:
      parent.parental_relationship

  if parents_deceased:
    if relatives.there_are_any:
      relatives.gather()

  if other_custodians.there_are_any:
    other_custodians.gather()

  set_parents_deceased

  nav.set_section("review_requests") 
  reason_seeking_guardianship["parents_consent"]
  has_guardian_nomination_by_signed_doc

  if requested_guardians.there_are_any:
    requested_guardians.gather()

  set_requested_guardians
  set_petitioner_requesting_guardianship

  # if requested_guardians.there_are_any:
  #   requested_guardians.gather()

  if requested_temporary_guardians.there_are_any:
    interview_order_temporary_guardian
  wants_sureties_waiver
  interview_order_bond

  nav.set_section("review_minors_guardianship")

  if current_acting_guardian:
    existing_guardians_or_conservators_kickout
  has_conservator_case_or_petition

  nav.set_section("review_minor_assets")
  if not has_conservator_case_or_petition:
    if assets.there_are_any:
      assets.gather()
      estimated_real_estate_value
      estimated_personal_estate_value
  else:
    set_no_assets

  nav.set_section("review_additional_requests")
  wants_additional_request

  interview_order_petition_for_appointment_of_guardian = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  petition_for_appointment_of_guardian_intro
  set_guardian_removal
  interview_order_petition_for_appointment_of_guardian
  nav.set_section("review_affidavit_disclosing_care_or_custody")
  interview_order_affidavit_disclosing_care_or_custody

  nav.set_section("review_military_affidavit")
  military_affidavit_intro
  knows_status_already
  interview_order_military_affidavit
  military_affidavit_case_name

  if who_is_making_petition == "interested_party":
    nav.set_section("section_fee_waiver")
    if wants_fee_waiver:
      set_fee_waiver_defaults
      ask_affidavit_questions

  nav.set_section("review_petition_for_appointment_of_guardian")
  petition_for_appointment_of_guardian_preview_question

  nav.set_section("section_download_petition")
  if esign:
    signature_date

  petition_for_appointment_of_guardian_download
---
#################### Object/Code Blocks Start #####################
---
code: |
  fees['Filing fee'].waive = True
  fees['Filing fee'].amount = 15
  fees['Service'].waive = True
  fees['Service'].amount = 35
  
  set_fee_waiver_defaults = True
---
code: |
  children[i].name.first
  children[i].birthdate
  if who_is_making_petition == "minor":
    children[i].phone_number
  children[i].complete = True
---
code: |
  users[i].name.first
  users[i].address.address
  users[i].relationship_to_minor
  users[i].complete = True
---
code: |
  parents[i].name.first
  if parents[i].is_deceased != True:
    parents[i].address.address
  parents[i].complete = True
---
code: |
  other_custodians[i].name.first
  other_custodians[i].address.address
  other_custodians[i].complete = True
---
code: |
  relatives.name.first
  relatives.address.address
  relatives.complete = True
---
code: |
  requested_guardians[i].name.first
  requested_guardians[i].address.address
  requested_guardians[i].complete = True
---
code: |
  assets[i].description
  assets[i].value
  assets[i].complete = True
---
code: |
  attorneys[i].name.first
  attorneys[i].address.address
  attorneys[i].complete = True
---
code: |
  children.there_is_another = False
---
code: |
  if who_is_making_petition == "minor":
    users.there_is_another = False
---
code: |
  guardians.there_is_another = False
---
code: |
  attorneys.there_is_another = False
---
event: warn_minor_too_young
decoration: hand
question: |
  Because you are under the age of 14
subquestion: |
  You are too young to make this petition on your own. 
  You will need an adult to help you. 
  Please ask an adult to help you answer the questions in this interview. The adult can 
  be any person who is interested in your well-being.
buttons:
  - Exit: exit
    url: https://www.masslegalhelp.org/children-families-divorce/guardians-other-caregivers/guardianship-minor-overview
  - Start over: restart
---
code: |
  if who_is_making_petition == "minor":
    users[0].name.first = children[0].name.first
    users[0].name.last = children[0].name.last
    users[0].name.middle = children[0].name.middle
    users[0].name.suffix = children[0].name.suffix
    users[0].address.address = children[0].address.address
    users[0].address.unit = children[0].address.unit
    users[0].address.city = children[0].address.city
    users[0].address.state = children[0].address.state
    users[0].address.zip = children[0].address.zip
    users[0].phone_number = children[0].phone_number
    users[0].relationship_to_minor = "Self"
    users.auto_gather = False
    users.gathered = True
  set_user_to_minor = True
---
code: |
  if who_is_making_petition == "interested_party": 
    if not petitioner_requesting_guardianship:
      requested_guardians.there_are_any = True
    else:
      requested_guardians.there_are_any = False
      petitioner_has_minor_consent 
  elif (who_is_making_petition == "minor"):
    requested_guardians.there_are_any = True

  set_requested_guardians = True
---
code: |
  if who_is_making_petition == "minor":
    petitioner_requesting_guardianship = False

  set_petitioner_requesting_guardianship = True
---
code: |
  addresses_to_search = [children[0].address]
---
code: |
  if len(parents.complete_elements()) == 2 and (parents[0].is_deceased and parents[1].is_deceased):
    parents_deceased = True
  elif len(parents.complete_elements()) == 1 and parents[0].is_deceased:
    parents_deceased = True
  else:
    parents_deceased = False

  set_parents_deceased = True
---
code: |
  bio_parents_can_resume_responsibilities = False
---
code: |
  if has_conservator_case_or_petition:
    assets.there_are_any = False
    
  set_no_assets = True
---
code: |
  guardian_removal = False
  set_guardian_removal = True
---
#################### Object/Code Blocks End #####################
---
#################### Override Blocks Start #####################
---
id: minor info
sets:
  - children[0].name.first
  - children[0].name.last
  - children[0].name.middle
  - children[0].name.suffix
  - children[0].address.address
  - children[0].address.unit
  - children[0].address.city
  - children[0].address.state
  - children[0].address.zip
  - children[0].address.country
question: |
  % if who_is_making_petition == "minor" and (not form_filled_by_attorney):
  Tell us about yourself
  % else:
  Who is the minor in this case?
  % endif
fields:
  - code: |
      children[0].name_fields()
  - code: |
      children[0].address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE, show_country=False)
---
id: minor birthdate
question: |
  % if who_is_making_petition == "minor" and (not form_filled_by_attorney):
  When were you born?
  % else:
  When was ${ children.familiar() } born?
  % endif
fields:
  - Birthdate: children[0].birthdate
    datatype: Birthdate
validation code: |
  if children[0].age_in_years() >= 18:
    validation_error("The minor must be under 18 years old.", field="children[0].birthdate")
---
id: minor phone number
sets:
  - children[0].phone_number
question: |
  % if who_is_making_petition == "minor" and (not form_filled_by_attorney):
  What is your phone number?
  % else:
  What is ${ children.familiar() }'s phone number?
  % endif
fields:
  - Primary phone number: children[0].phone_number
    datatype: al_international_phone
    required: False
---
id: petitioner information
sets:
  - users[0].name.first
  - users[0].name.last
  - users[0].name.middle
  - users[0].name.suffix
  - users[0].address.address
  - users[0].address.unit
  - users[0].address.city
  - users[0].address.state
  - users[0].address.zip
  - users[0].address.country
  - users[0].phone_number
  - users[0].relationship_to_minor
question: |
  % if form_filled_by_attorney:
  Tell us about the petitioner
  % else:
  Tell us about yourself
  % endif
fields:
  - code: |
      users[0].name_fields()
  - code: |
      users[0].address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE, show_country=False)
  - Primary phone number: users[0].phone_number
    datatype: al_international_phone
    required: False
  - Relationship to ${ children.familiar() }: users[0].relationship_to_minor
---
id: petitioner information
sets:
  - users[i].name.first
  - users[i].name.last
  - users[i].name.middle
  - users[i].name.suffix
  - users[i].address.address
  - users[i].address.unit
  - users[i].address.city
  - users[i].address.state
  - users[i].address.zip
  - users[i].address.country
  - users[i].phone_number
  - users[i].relationship_to_minor
question: |
  % if len(users.complete_elements()) < 1 and form_filled_by_attorney:
  Tell us about the petitioner
  % elif len(users.complete_elements()) < 1 and (not form_filled_by_attorney):
  Tell us about yourself
  % else:
  Tell us about the other petitioner
  % endif
fields:
  - code: |
      users[i].name_fields()
  - code: |
      users[i].address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE, show_country=False)
  - Primary phone number: users[i].phone_number
    datatype: al_international_phone
    required: False
  - Relationship to ${ children.familiar() }: users[i].relationship_to_minor
validation code: |
  if len(users.complete_elements()) > 0:
    users.there_is_another = False
---
id: users there_is_another
question: |
  % if form_filled_by_attorney:
  Is anyone else making this Petition with your client?
  % else:
  Is anyone else making this Petition with you?
  % endif
fields:
  - no label: users.there_is_another
    datatype: yesnoradio
---
id: waiving_cost
question: |
  You may qualify for a fee waiver
subquestion: |
  There is no filing fee to ask for a guardian. 

  But you may need to pay:

  * A $15 citation fee
  * And a fee to **serve** (give) the papers to the other people who need to know about this case,
    or to publish notice if you cannot find them to serve them in person.

  The judge may also want to know your income to decide if you can afford to
  guarantee the **surety bond**.

  If you earn under a certain amount, you can ask the court to help pay the citation fee,
  serve the papers and to waive the surety bond.
fields:
  - Do you want to find out if you qualify for a fee waiver?: wants_fee_waiver
    datatype: yesnoradio
---
#################### Override Blocks End #####################
---
#################### Question Blocks Start #####################
---
id: petition_for_appointment_of_guardian
continue button field: petition_for_appointment_of_guardian_intro
question: |
  Ask the court for a guardian for a minor
subquestion: |
  A guardian for a minor is an adult who gets permission from a judge to make decisions for 
  someone who is under 18.

  This interview will help you make a "Petition for the Appointment of a Guardian of a Minor (MPC 140),"
  and more forms that are filed with the petition.

  You can use this interview if you are **either**:

  * An adult who cares about a minor's well-being; **or**
  * A minor who is 14 or older.

  <h2 class="h4">Before you get started</h2>

  Please gather:

  1. Information about the minor's parents, including name, contact information, and whether they are living.
  2. Information about anyone **else** who has taken care of the minor over the last 60 days.
  3. Information about any bank accounts and other property that the minor owns.
  4. Information about **other court cases** that have to do with the minor.
  5. Your own financial information, unless you are the minor.

  You should also find out if:

  * The minor, or
  * The minor's parents

  agree to getting a guardian.

  <h2 class="h4">When you are finished</h2>

  You need to print and file the documents that this interview makes with the court.

  Some of the documents may need to be signed in front of a notary public.

  Most people take about 20 minutes to finish this interview.
---
id: choose a court
question: |
  What court will you file in?
subquestion: |

  % if len(all_matches) and all_courts.filter_courts(allowed_courts):
  % if who_is_making_petition == "minor":
  Because you live in ${ children[0].address.city }, we think your court
  is ${ court_short_label(all_matches[0]) }.
  % else:
  Because ${ children[0].familiar() } lives in ${ children[0].address.city }, 
  we think the court is ${ court_short_label(all_matches[0]) }.
  % endif

  ${ map_of(combined_locations(all_matches)) }

  % endif

fields:
  - I will file in: trial_court
    datatype: object
    object labeler: court_short_label
    choices: all_courts.filter_courts(allowed_courts)
    default: |
      next(iter(all_matches), None)
    under text: |
      Make sure the court is either:

      % if who_is_making_petition == "minor":
      1. The county you live in right now, or
      1. If your parents died, the court serving the county where your parent's estate was **probated** (decided)
      % else:
      1. The county ${ children[0].familiar() if len(children.complete_elements()) > 0 else f"the minor" } lives in right now, or
      1. If ${ children[0].familiar() if len(children.complete_elements()) > 0 else f"the minor" }'s parents died, the court serving the county where the parents' estate was **probated** (decided)
      % endif

  - I will file in this court because: court_choice_reason
    datatype: checkboxes
    minlength: 1
    none of the above: False
    label above field: True
    choices:
      - label: |
          % if who_is_making_petition == "minor":
          It is the court serving the county where I live
          % else:
          It is the court serving the county where ${ children[0].familiar() if len(children.complete_elements()) > 0 else f"the minor" } lives
          % endif
        key: minors_county
      - label: |
          % if who_is_making_petition == "minor":
          My parent or parents died and this is the court serving the county where their estate was probated
          % else:
          ${ children[0].familiar() if len(children.complete_elements()) > 0 else f"The minor" }'s parent or parents died and this is the court serving the county where their estate was probated
          % endif
        key: will_county
---
id: how many parents
question: |
  How many parents can you tell us about?
subquestion: |
  The judge needs to know about ${ children[0].familiar() if len(children.complete_elements()) > 0 else f"the minor" }'s parents, whether or not they are alive.

  ${ collapse_template(what_is_a_parent) }

  But if you do not have information about a parent, you can just tell us the information
  you know.
fields:
  - I can tell you about: parents.target_number
    datatype: integer
    input type: radio
    choices:
      - No parents: 0
      - One parent: 1
      - Both parents: 2
---
template: what_is_a_parent
subject: |
  What is a parent?
content: |
  A parent is someone who is named on ${ children[0].familiar() if len(children.complete_elements()) > 0 else f"the minor" }'s official birth record.
  That includes a birth parent who still has parental rights and an adoptive parent.

  When someone is adopted, the birth record is updated with the new parent's name.

  You do not need to list a step parent or a foster parent unless they have legally adopted ${ children[0].familiar() if len(children.complete_elements()) > 0 else f"the minor" }.
---
id: parent basic information
sets:
  - parents[i].name.first
  - parents[i].name.last
  - parents[i].name.middle
  - parents[i].name.suffix
question: |
  % if who_is_making_petition == "minor" and (not form_filled_by_attorney):
  % if parents.target_number == 1:
  Tell us about your parent
  % else:
  Tell us about your ${ ordinal(i) } parent
  % endif
  % else:
  % if parents.target_number == 1:
  Tell us about ${ children.familiar() }'s parent
  % else:
  Tell us about ${ children.familiar() }'s ${ ordinal(i) } parent
  % endif
  % endif
fields:
  - code: |
      parents[i].name_fields()
  - Is this person deceased?: parents[i].is_deceased
    datatype: yesnomaybe
  - Does this parent agree to the appointment of a guardian?: parents[i].agrees_to_guardianship
    datatype: yesnomaybe
    show if:
      variable: parents[i].is_deceased
      is: False
---
if: |
  i == 0 or ( len(parents.complete_elements().filter(is_deceased=True).filter(agrees_to_guardianship=True)) == 1 )
id: parent relationship
question: |
  Adding ${ parents[i] }'s parental relationship to ${ children.familiar() } on the form
subquestion: |
  The court form has space for one parent labeled "mother" and one parent labeled "father", regardless of each parent's gender.

  You must choose which parent is labeled "mother" and which is labeled "father". It does not have any legal relevance to the case
  if the label does not match the parent's gender.

  <div class="alert alert-info" role="alert">
    <i class="fas fa-info-circle"></i>
    The <a href="https://www.mass.gov/news/governor-healey-signs-parentage-act-ensuring-equality-for-all-families-in-massachusetts">Parentage Act</a><i class="fas fa-external-link-alt"></i>
    requires the Trial Court to update its forms to remove unnecessary gendered language like this. This interview will be updated to reflect the change
    when the Trial Court has finished that work.
  </div>
fields:
  - ${ parents[i] } will be labeled the: parents[i].parental_relationship
    datatype: radio
    choices:
      - Father: father
      - Mother: mother
  - note: |
      ${parents[1] } will be labeled the **father**
    show if:
      variable: parents[i].parental_relationship
      is: mother
      code: |
        len(parents.complete_elements().filter(is_deceased=False).filter(agrees_to_guardianship=True)) > 1
  - note: |
      ${parents[1] } will be labeled the **mother**
    show if:
      variable: parents[i].parental_relationship
      is: father
      code: |
        len(parents.complete_elements().filter(is_deceased=False).filter(agrees_to_guardianship=True)) > 1
---
code: |
  # only reachable when parents[0] consented and is alive, 
  # so we know that parents[0].parental_relationship is defined by the interactive question
  if len(parents.complete_elements().filter(is_deceased=False).filter(agrees_to_guardianship=True)) > 1:
    parents[1].parental_relationship = "mother" if parents[0].parental_relationship == "father" else "father"
---
id: parent contact information
sets:
  - parents[i].address.address
  - parents[i].address.unit
  - parents[i].address.city
  - parents[i].address.state
  - parents[i].address.zip
  - parents[i].address.country
  - parents[i].phone_number
question: |
  Contact information for ${ parents[i] }
subquestion: |
  Give as much information as you know.
fields:
  - An address already mentioned: parents[i].address
    datatype: object_radio
    choices:
      - petitioners[0].address
      - children[0].address
      - |
        [parent.address for parent in parents.complete_elements() if ((not parent.is_deceased) and parent.address.address)]
    none of the above: A different address
    disable others:
      - parents[i].address.address
      - parents[i].address.unit
      - parents[i].address.city
      - parents[i].address.state
      - parents[i].address.zip
  - Street address: parents[i].address.address
    required: False
    address autocomplete: True
  - Apartment: parents[i].address.unit
    required: False
  - City: parents[i].address.city
    required: False
  - State: parents[i].address.state
    required: False
  - Zip or postal code: parents[i].address.zip
    required: False
  - Primary phone number: parents[i].phone_number
    required: False
validation code: |
  if parents[i].address.address and ((not parents[i].address.city) or (not parents[i].address.state)):
    validation_error(f'You entered incomplete address details. If you want to add an address, make sure to include the street address, city, and state.')
  elif parents[i].address.unit and ((not parents[i].address.address) or (not parents[i].address.city) or (not parents[i].address.state)):
    validation_error(f'You entered incomplete address details. If you want to add an address, make sure to include the street address, city, and state.')
  elif parents[i].address.city and ((not parents[i].address.address) or (not parents[i].address.state)):
    validation_error(f'You entered incomplete address details. If you want to add an address, make sure to include the street address, city, and state.')
  elif parents[i].address.state and ((not parents[i].address.address) or (not parents[i].address.city)):
    validation_error(f'You entered incomplete address details. If you want to add an address, make sure to include the street address, city, and state.')
  elif parents[i].address.zip and ((not parents[i].address.address) or (not parents[i].address.city) or (not parents[i].address.state)):
    validation_error(f'You entered incomplete address details. If you want to add an address, make sure to include the street address, city, and state.')
---
objects:
  - reason_seeking_guardianship: DADict.using(auto_gather=False, gathered=True)
---
id: why seeking guardianship
question: |
  % if who_is_making_petition == "minor" and (not form_filled_by_attorney):
  Why do you need a guardian?
  % else:
  Why does ${ children.familiar() } need a guardian?
  % endif
subquestion: |
  You need to give the judge a short reason to get a guardian.

  When the judge schedules a hearing, you will have a chance to explain
  more.

  Choose at least one reason.
fields:
  - ${ children.familiar() }'s parents **agree** ${ children.familiar() } should have a guardian: reason_seeking_guardianship["parents_consent"]
    datatype: yesno
  - ${ children.familiar() }'s parents are **not fit** parents (they do not or cannot take care of ${ children.familiar() }): reason_seeking_guardianship["parents_unfit"]
    datatype: yesno
  - Briefly explain: parents_unfit_to_exercise_parental_rights_exp
    datatype: area
    maxlength: 310
    show if: reason_seeking_guardianship["parents_unfit"]
    help: |
      Give the judge a short explanation for why the parents are unfit to take care of ${ children.familiar() }.

      You do not need to list every reason. You will be able to explain more at the hearing.
  - ${ children.familiar()}'s parents **died**: reason_seeking_guardianship["parents_death"]
    datatype: yesno
  - A judge ended (**terminated**) the parental rights of ${ children.familiar() }'s parents: reason_seeking_guardianship["parents_rights_terminated"]
    datatype: yesno
  - ${ children.familiar() }'s parents voluntarily **gave up** their right to take care of ${ children.familiar() } in a court: reason_seeking_guardianship["parents_surrendered_rights"]
    datatype: yesno
  - ${ children.familiar() }'s parents are **not available** to take care of ${ children.familiar() }: reason_seeking_guardianship["parents_unavailable"]
    datatype: yesno
  - Briefly explain: parents_unavailable_to_exercise_parental_rights_exp
    datatype: area
    maxlength: 310
    show if: reason_seeking_guardianship["parents_unavailable"]
    help: |
      Give the judge a short explanation for why the parents are not **available** to take care of ${ children.familiar() }.

      You do not need to list every reason. You will be able to explain more at the hearing.
  - ${ children.familiar() } already had a guardian, but that **guardian died** or is no longer able to act as guardian and the guardian did not name a replacement in writing: reason_seeking_guardianship["previous_guardian"]
    datatype: yesno
  - note: |
      **Because you said that the previous guardian died or is no longer able to take care of ${ children.familiar() }, you need to give the judge more information.**

      The information could include:

      * A copy of the court order that appointed the previous guardian
      * A copy of the death certificate of the previous guardian

      You can upload the information now, or make a copy and attach it before you file.
    show if: reason_seeking_guardianship["previous_guardian"]
  - Briefly explain the information you will give the judge: previous_third_party_guardian_death_or_incapacitation_exp
    datatype: area
    maxlength: 310
    show if: reason_seeking_guardianship["previous_guardian"]
  - Are you ready to upload the documents now?: ready_to_attach_previous_guardian_order
    datatype: yesnoradio
    show if: reason_seeking_guardianship["previous_guardian"]
  - Upload the document (as a PDF or a picture with your phone): previous_guardian_order_attachment
    datatype: files
    show if: ready_to_attach_previous_guardian_order
    file css class: None
validation code: |
  if not reason_seeking_guardianship.true_values():
    validation_error('You must choose at least one reason', field='reason_seeking_guardianship["previous_guardian"]')
---
id: nomination of guardian by signed writing
question: |
  % if who_is_making_petition == "minor" and (not form_filled_by_attorney):
  Has a guardian been nominated for you in a will or other written document, signed by a parent or existing guardian?
  % else:
  Has a guardian been nominated for ${ children.familiar() } in a will or other written document, signed by a parent or existing guardian?
  % endif
subquestion: |
  If you select **Yes**, you will need to attach a copy of that signed document.
fields:
  - no label: has_guardian_nomination_by_signed_doc
    datatype: yesnoradio
validation code: |
  if has_guardian_nomination_by_signed_doc:
    has_guardian_nomination_by_signed_doc_yes = True
  else:
    has_guardian_nomination_by_signed_doc_no = True
---
id: parents consent to appointment of guardian
question: |
  % if who_is_making_petition == "minor" and (not form_filled_by_attorney):
  Do your parents consent to the appointment of a guardian?
  % else:
  Do ${ children.familiar() }'s parents consent to the appointment of a guardian?
  % endif
fields:
  - no label: parents_consent_to_guardian_appointment
    datatype: yesnoradio
---
id: parental rights terminated
question: |
  % if who_is_making_petition == "minor" and (not form_filled_by_attorney):
  How were the parental rights of your parent(s) terminated?
  % else:
  How were the parental rights of ${ children.familiar() }'s parent(s) terminated?
  % endif
subquestion: |
  Depending on which answer you select, **you must attach a copy of a corresponding document**—either a court order, a surrender, or a death certificate—to this Petition.
fields:
  - Select one: parental_rights_termination_reason
    datatype: radio
    choices:
      - By a prior court order: court_order
      - By a signed voluntary surrender: voluntary_surrender
      - By the death of the parent(s): parent_death
---
id: parents unavailable to exercise parental rights
question: |
  % if who_is_making_petition == "minor" and not (form_filled_by_attorney):
  Tell us why your parent(s) are unavailable to exercise their parental rights
  % else:
  Tell us why ${ children.familiar() }'s parent(s) are unavailable to exercise their parental rights
  % endif
fields:
  - Please give a brief explanation: parents_unavailable_to_exercise_parental_rights_exp
    input type: area
    maxlength: 310
---
id: parents unfit to exercise parental rights
question: |
  % if who_is_making_petition == "minor" and (not form_filled_by_attorney):
  Tell us why your parent(s) are unfit to exercise their parental rights
  % else:
  Tell us why ${ children.familiar() }'s parent(s) are unfit to exercise their parental rights
  % endif
fields:
  - Please give a brief explanation: parents_unfit_to_exercise_parental_rights_exp
    input type: area
    maxlength: 310
---
id: deceased or incapacitated previous guardian
question: |
  Tell us about the guardian that is now deceased or incapacitated
subquestion: |
  You must **attach the order or any relevant documents** to this Petition. You will also need to briefly **describe each of them below**.
fields:
  - Write your description here: previous_third_party_guardian_death_or_incapacitation_exp
    input type: area
    maxlength: 310
---
id: petitioner requesting guardianship
question: |
  % if form_filled_by_attorney:
  Does ${ users[0] } want to be the guardian for ${ children.familiar() }?
  % else:
  Do you want to be the guardian for ${ children.familiar() }?
  % endif
fields:
  - no label: petitioner_requesting_guardianship
    datatype: yesnoradio
  - label: |
      % if form_filled_by_attorney:
      Petitioner is not under investigation and does not have any criminal record regarding the abuse or neglect of a child
      % else:
      I am not under investigation and I do not have any criminal record regarding the abuse or neglect of a child: 
      % endif
    field: petitioner_not_under_investigation
    datatype: yesno
    show if: petitioner_requesting_guardianship
validation code: |
  if petitioner_requesting_guardianship and not petitioner_not_under_investigation:
    validation_error('The petitioner is not eligible to be a guardian if they are currently being investigated or have a record of past abuse or neglect of a child')
---
id: sureties waiver
question: |
  Waiving the **surety** requirement
subquestion: |
  When a judge appoints a guardian, they require the guardian to sign a **bond**
  to the court and name someone as a **surety**. The bond is a personal guarantee. 
  It is a promise that the guardian will manage the money and property of the ward responsibly.

  The **surety** is a person who promises to pay the court if the guardian does not manage the money
  or property the way that they should. The surety can be someone other than the guardian.

  [More about surety bonds](https://www.masslegalhelp.org/children-and-families/guardians/court-appointment)
  (opens in a new tab).

  When the guardian is for a minor, the surety requirement is often waived, or skipped.
  This is because the guardian does not have control over ${ children[0].familiar() if len(children.complete_elements()) > 0 else f"the minor" }'s money or property.

  You can ask the judge to skip the surety requirement now.
fields:
  - I want permission to skip the **surety** requirement: wants_sureties_waiver
    datatype: yesnoradio
  - I do not need a **surety** because: skip_surety_reasons_checklist
    datatype: checkboxes
    minlength: 1
    none of the above: False
    choices:
      - ${ children[0].familiar() } does not have a significant amount of money or property: no_estate
      - Other: other
    show if:
      variable: wants_sureties_waiver
      is: True
      code: |
        requested_temporary_guardians.there_are_any
  - Briefly explain: skip_surety_reasons
    datatype: area
    maxlength: 310
    show if:
      variable: skip_surety_reasons_checklist["other"]
      is: True
      code: |
        requested_temporary_guardians.there_are_any
---
id: other custodian during past 60 days
question: |
  % if who_is_making_petition == "minor" and (not form_filled_by_attorney):
  Is there someone else who was in charge of taking care of you in the last 60 days?
  % else:
  Is there someone else who was in charge of taking care of ${ children.familiar() } in the last 60 days?
  % endif
subquestion: |
  % if who_is_making_petition == "minor" and (not form_filled_by_attorney):
  The court needs to know who had **primary care or custody** of you.

  Anyone who had primary care or custody of you needs to know about this court case and has
  a right to go to the hearing.
  % else:
  The court needs to know who had **primary care or custody** of ${ children.familiar() }.

  Anyone who had primary care or custody of ${ children.familiar() } needs to know about this court case and has
  a right to go to the hearing.
  % endif

  ${ collapse_template(what_is_primary_care_or_custody) }
fields:
  - Did someone else have primary care or custody in the last 60 days?: other_custodians.there_are_any
    datatype: yesnoradio
  - label: |
      % if who_is_making_petition == "minor":
      How many people?
      % else:
      How many people, not counting yourself?
      % endif
    field: other_custodians.target_number
    datatype: integer
    show if: other_custodians.there_are_any
validation code: |
  if not other_custodians.there_are_any:
    other_custodians.target_number = 0
---
template: what_is_primary_care_or_custody
subject: |
  What does **primary care or custody** mean?
content: |
  "Primary care or custody" means you are one of the people who takes care of ${ children[0].familiar() if len(children.complete_elements()) > 0 else f"the minor" } 
  most of the time. You make big decisions for them and handle their daily needs like meals, 
  a place to live, and keeping them safe.

  A paid babysitter doesn't have primary care or custody. 
  They are only helping for a short time and aren't responsible for all of ${ children[0].familiar() if len(children.complete_elements()) > 0 else f"the minor" }'s needs.
---
id: other custodian information
sets:
  - other_custodians[i].name.first
  - other_custodians[i].name.last
  - other_custodians[i].name.middle
  - other_custodians[i].name.suffix
  - other_custodians[i].address.address
  - other_custodians[i].address.unit
  - other_custodians[i].address.city
  - other_custodians[i].address.state
  - other_custodians[i].address.zip
  - other_custodians[i].phone_number
question: |
  % if other_custodians.target_number == 1:
  Information about the person with primary care or custody
  % else:
  Information about the ${ ordinal(i) } person with primary care or custody
  % endif
subquestion: |
  % if len(other_custodians.complete_elements()) > 0:  
  So far, you have told us about ${ other_custodians.complete_elements() }.
  % endif
fields:
  - code: |
      other_custodians[i].name_fields()
  # - An address already mentioned: other_custodians[i].address
  #   datatype: object_radio
  #   choices:
  #     - petitioners[0].address
  #     - children[0].address
  #     - |
  #       [parent.address for parent in parents.complete_elements() if not parent.is_deceased and parent.address.address]
  #     - |
  #       [custodian.adddress for custodian in other_custodians.complete_elements() if custodian.address.address]
  #   none of the above: A different address
  - code: |
      other_custodians[i].address_fields()
  - Primary phone number: other_custodians[i].phone_number
  - Relationship to ${ children.familiar() }: other_custodians[i].relationship_to_minor
  - Start date: other_custodians[i].start_date
    datatype: date
    required: True
  - End date (leave blank if ongoing): other_custodians[i].end_date
    datatype: date
    required: False
---
id: other custodians there_is_another
question: |
  % if who_is_making_petition == "minor" and (not form_filled_by_attorney):
  Has anyone else had primary care and custody over you during the last 60 days?
  % else:
  Has anyone else had primary care and custody over ${ children.familiar() } during the last 60 days?
  % endif
fields:
  - no label: other_custodians.there_is_another
    datatype: yesnoradio
---
id: requested guardian information
sets:
  - requested_guardians[i].name.first
  - requested_guardians[i].name.last
  - requested_guardians[i].name.middle
  - requested_guardians[i].name.suffix
  - requested_guardians[i].address.address
  - requested_guardians[i].address.unit
  - requested_guardians[i].address.city
  - requested_guardians[i].address.state
  - requested_guardians[i].address.zip
  - requested_guardians[i].address.country
  - requested_guardians[i].phone_number
question: |
  % if (len(requested_guardians.complete_elements()) < 1) and (who_is_making_petition == "minor" and not form_filled_by_attorney):
  Who do you want the court to appoint as your guardian?
  % elif (len(requested_guardians.complete_elements()) < 1) and (who_is_making_petition == "minor" and form_filled_by_attorney):
  Who does ${ children[0] } want the court to appoint as their guardian?
  % elif (len(requested_guardians.complete_elements()) < 1) and (who_is_making_petition == "interested_party"):
  Who do you want the court to appoint as a guardian for ${ children.familiar() }?
  % elif (len(requested_guardians.complete_elements()) > 0) and (who_is_making_petition == "minor" and not form_filled_by_attorney):
  Who else do you want the court to appoint as your guardian?
  % elif (len(requested_guardians.complete_elements()) > 0) and (who_is_making_petition == "minor" and form_filled_by_attorney):
  Who else does ${ children[0] } want the court to appoint as their guardian?
  % elif (len(requested_guardians.complete_elements()) > 0) and (who_is_making_petition == "interested_party"):
  Who else do you want the court to appoint as a guardian for ${ children.familiar() }?
  % endif
subquestion: |
  % if len(requested_guardians.complete_elements()) < 1:
  You can request **up to two guardians** in this Petition. Start by telling us about the first guardian you want to request.
  % endif
fields:
  - code: |
      requested_guardians[i].name_fields()
  - label: |
      % if who_is_making_petition == "minor" and not form_filled_by_attorney:
      Do you agree that this person should be appointed as your guardian?
      % else:
      Does ${ children[0].familiar() } agree that this person should be appointed as their guardian?
      % endif
    field: requested_guardians[i].has_minor_consent
    datatype: yesnomaybe
  - code: |
      requested_guardians[i].address_fields()
  - Primary phone number: requested_guardians[i].phone_number
    required: False
  - Relationship to ${ children.familiar() }: requested_guardians[i].relationship_to_minor
    required: False
validation code: |
  if who_is_making_petition == "minor":
    requested_guardians[i].has_minor_consent = True
---
id: requested guardian priority for appointment
question: |
  Does ${ requested_guardians[i].name } have priority for appointment?
subquestion: |
  In order to have priority for appointment as a guardian, a person must have been nominated
  by ${ children[0].familiar() if len(children.complete_elements()) > 0 else f"the minor" } **and** ${ children[0].familiar() if len(children.complete_elements()) > 0 else f"the minor" } must be at least 14 years old.

  If you select 'Yes', you must attach a copy of ${ children[0].familiar() if len(children.complete_elements()) > 0 else f"the minor" }'s nomination to this Petition.
fields:
  - no label: requested_guardians[i].has_priority_appointment
    datatype: yesnoradio
---
id: requested_guardians there_is_another
question: |
  Do you want to request a second guardian in this Petition?
fields:
  - no label: requested_guardians.there_is_another
    datatype: yesnoradio
---
code: |
  if len(requested_guardians.complete_elements()) > 1:
    requested_guardians.there_is_another = False
---
id: existing guardians or conservators kickout
event: existing_guardians_or_conservators_kickout
question: |
  We're sorry, but you cannot use this tool to create a *Petition for Appointment of Guardian of Minor*
subquestion: |
  If there is already an existing guardianship for the minor, you will need to ask for a change in the existing case instead of filing a new petition.

  If you made a mistake, select **Undo** to go back and change your answer.
---
id: relatives there_are_any
question: |
  % if who_is_making_petition == "minor":
  Aside from your parents, can you provide information about any other relatives that can be found?
  % else:
  Aside from ${ children.familiar() }'s parents, can you provide information about any of ${ children.familiar() }'s other relatives that can be found?
  % endif
subquestion: |
  You will be able to add **up to two people**. They can include brothers and sisters, or adult relatives, such as aunts, uncles, and grandparents.
fields:
  - no label: relatives.there_are_any
    datatype: yesnoradio
---
id: relatives information
sets:
  - relatives[i].name.first
  - relatives[i].name.last
  - relatives[i].name.middle
  - relatives[i].name.suffix
  - relatives[i].address.address
  - relatives[i].address.unit
  - relatives[i].address.city
  - relatives[i].address.state
  - relatives[i].address.zip
  - relatives[i].address.country
  - relatives[i].phone_number
question: |
  % if who_is_making_petition == "minor":
  Tell us about your relative
  % else:
  Tell us about ${ children.familiar() }'s relative
  % endif
fields:
  - code: |
      relatives[i].name_fields()
  - code: |
      relatives[i].address_fields()
  - Primary phone number: relatives[i].phone_number
  - Relationship to ${ children.familiar() }: relatives[i].relationship_to_minor
validation code: |
  if len(relatives.complete_elements()) > 0:
    relatives.there_is_another = False
---
id: relatives there_is_another
question: |
  Do you want to add another relative to the petition?
fields:
  - no label: relatives.there_is_another
    datatype: yesnoradio
---
id: current guardian
question: |
  % if who_is_making_petition == "minor" and not form_filled_by_attorney:
  Is anyone currently acting as your Guardian or Conservator in Massachusetts or elsewhere?
  % else:
  Is anyone currently acting as ${ children.familiar() }'s Guardian or Conservator in Massachusetts or elsewhere?
  % endif
fields:
  - no label: current_acting_guardian
    datatype: yesnoradio
validation code: |
  if current_acting_guardian:
    acting_guardian_yes = True
  else:
    acting_guardian_no = True
---
id: current guardian information
sets:
  - guardians[i].name.first
  - guardians[i].name.last
  - guardians[i].name.middle
  - guardians[i].name.suffix
  - guardians[i].address.address
  - guardians[i].address.unit
  - guardians[i].address.city
  - guardians[i].address.state
  - guardians[i].address.zip
  - guardians[i].address.country
  - guardians[i].phone_number
question: |
  % if who_is_making_petition == "minor":
  Tell us about your current Guardian or Conservator
  % else:
  Tell us about ${ children.familiar() }'s current Guardian or Conservator
  % endif
fields:
  - code: |
      guardians[i].name_fields()
  - code: |
      guardians[i].address_fields()
  - Primary phone number: guardians[i].phone_number
  - Relationship to ${ children.familiar() }: guardians[i].relationship_to_minor
---
id: has conservatorship case or petition
question: |
  % if who_is_making_petition == "minor":
  Do you have a conservator?
  % else:
  Does ${ children.familiar() } have a conservator?
  % endif
subquestion: |
  % if who_is_making_petition == "minor":
  Select Yes if you either **have a conservator** or **will ask the court for one**.
  % else:
  Select Yes if ${ children.familiar() } either **has a conservator** or **will ask the court for one**.
  % endif
fields:
  - label: |
      % if who_is_making_petition == "minor":
      I have a conservator or I will file a petition for one
      % else:
      ${ children.familiar() } has a conservator or will file a petition for one
      % endif
    field: has_conservator_case_or_petition
    datatype: yesnoradio
---
id: minor assets there_are_any
question: |
  % if who_is_making_petition == "minor" and (not form_filled_by_attorney):
  Do you have any assets?
  % else:
  Does ${ children.familiar() } have any assets?
  % endif
subquestion: |
  Assets include bank accounts, real estate, and other things that hold value.

  ${ collapse_template(explain_question_about_assets_template) }
fields:
  - label: |
      % if who_is_making_petition == "minor":
      I have assets
      % else:
      ${ children.familiar() } has assets
      % endif
    field: assets.there_are_any
    datatype: yesnoradio
validation code: |
  if assets.there_are_any:
    minor_has_assets_yes = True
  else:
    minor_has_assets_no = True
---
variable name: asset_terms
data: !!omap
  - bank account: Bank account
  - real estate: Real estate
  - pension or retirement account: Pension or retirement account
  - jewelry or other valuable personal property: Jewelry or other valuable personal property
---
template: explain_question_about_assets_template
subject: |
  Why does the judge need to know?
content: |
  A guardian for a minor usually cannot make decisions
  about ${ children[0].familiar() if len(children.complete_elements()) > 0 else f"the minor" }'s property unless they are also appointed
  as a **conservator**. But the judge still needs to know
  about things that ${ children[0].familiar() if len(children.complete_elements()) > 0 else f"the minor" } owns.

  If ${ children[0].familiar() if len(children.complete_elements()) > 0 else f"the minor" } owns a lot of valuable things, usually more than
  $5,000 worth, the judge may decide that the guardian needs
  to pay or guarantee a bond to the court.
---
code: |
  assets[i].source
  assets[i].market_value
  assets[i].complete = True
---
id: minor asset information
question: |
  % if who_is_making_petition == "minor":
  Tell us about your ${ ordinal(i) } asset
  % else:
  Tell us about ${ children.familiar() }'s ${ ordinal(i) } asset
  % endif
subquestion: |
  You can add as many assets as you have, one at a time, even 
  if you have multiple of one kind of asset.

  % if i > 0:
  So far you have told us about:

  % for item in assets.complete_elements():
    * ${ item.source } worth ${ currency(item.market_value) }
  % endfor
  % else:
  **DO NOT** list bank account numbers or Social Security numbers.
  % endif
fields:
  - What kind of asset is it?: assets[i].source
    datatype: radio
    code: asset_terms
  - Describe (without an account number): assets[i].description
    maxlength: 85
    help: |
      For example: My checking account at Bank of America
  - How much is this asset worth?: assets[i].market_value
    datatype: currency
    min: 0
  - I have another asset to list: assets.there_is_another
    datatype: yesnoradio
---
code: |
  estimated_real_estate_value = assets.market_value(source="real estate")
  estimated_personal_estate_value = assets.market_value(exclude_source="real estate")
---
id: additional request
question: |
  Do you need to ask the court **something else**?
subquestion: |
  If there is something else you need to ask the court on the
  Petition for Guardianship, you can ask it here.

  This is optional.
fields:
  - I have another request for the court: wants_additional_request
    datatype: yesnoradio
  - What do you want to ask?: additional_request_exp
    input type: area
    maxlength: 310
    show if:
      variable: wants_additional_request
      is: True
---
id: preview petition_for_appointment_of_guardian
question: |
  Preview your forms
subquestion: |
  Here is a preview of the forms you will download on the next page.   

  ${ action_button_html(al_court_bundle.as_pdf(key='preview').url_for(), label="Open preview") }

  Click the button to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_petition_for_appointment_of_guardian'), label='Edit answers', color='info') }

continue button field: petition_for_appointment_of_guardian_preview_question
---
# code: |
#   signature_fields = ['users[0].signature', 'users1_signature']
---
# code: |
#   signature_fields = ['users.item(1).signature', 'users2_signature']
---
code: |
  signature_fields = [user.attr_name('signature') for user in users]
---
#################### Review Blocks Start #####################
---
id: petition for appointment of guardian review screen
event: review_petition_for_appointment_of_guardian
question: |
  Review your answers
review:
  - Edit: trial_court
    button: |
      **Trial Court Division**:
      % if defined("trial_court.division"):
      ${ trial_court.division }
      % endif
  - Edit: children.revisit
    button: |
      **Minor**

      % for item in children:
      ${ item.address_block() }

      % endfor
  - Edit: users[0].name.first
    button: |
      % if len(users.complete_elements()) > 1:
      **First Petitioner**:
      % else:
      **Petitioner**:
      % endif

      ${ users[0].address_block() }

      Relationship to minor: ${ users[0].relationship_to_minor }
  - Edit: users[1].name.first
    button: |
      **Second Petitioner**:

      ${ users[1].address_block() }

      Relationship to minor: ${ users[1].relationship_to_minor }
    show if: len(users.complete_elements()) > 1
  - Edit: parents.revisit
    button: |
      **${ children[0] }'s Parents**:

      % for item in parents:
        ${ item.address_block() }
        ${ f"(Deceased)" if item.is_deceased else "" }

      % endfor
  - Edit: has_guardian_nomination_by_signed_doc
    button: |
      **Has a guardian been nominated for ${ children[0] } through a signed document?**:
      ${ word(yesno(has_guardian_nomination_by_signed_doc)) }
  - Edit: reason_seeking_guardianship
    button: |
      **Reasons for seeking a guardianship for ${ children[0] }**:

      % if reason_seeking_guardianship["parents_consent"]:
        * ${ children.familiar() }'s parents **agree** ${ children.familiar() } should have a guardian

      % endif
      % if reason_seeking_guardianship["parents_unfit"]:
        * ${ children.familiar() }'s parents are not fit to care for ${ children.familiar() }

      % endif
      % if reason_seeking_guardianship["parents_death"]:
        * ${ children.familiar()}'s parents died

      % endif
      % if reason_seeking_guardianship["parents_rights_terminated"]:
        * A judge ended the parental rights of ${ children.familiar() }'s parents

      % endif
      % if reason_seeking_guardianship["parents_surrendered_rights"]:
        * ${ children.familiar() }'s parents voluntarily gave up their right to take care of ${ children.familiar() }

      % endif
      % if reason_seeking_guardianship["parents_unavailable"]:
        * ${ children.familiar() }'s parents are not available to take care of ${ children.familiar() }

      % endif
      % if reason_seeking_guardianship["previous_guardian"]:
        * ${ children.familiar() } had a guardian that died or is no longer able to act as guardian

      % endif
  - Edit: petitioner_requesting_guardianship
    button: |
      **Is the Petitioner requesting guardianship of ${ children[0] }?**:
      ${ word(yesno(petitioner_requesting_guardianship)) }
    show if: who_is_making_petition == "interested_party"
  - Edit: wants_sureties_waiver
    button: |
      **Do you want to waive sureties?**:
      ${ word(yesno(wants_sureties_waiver)) }
  - Edit: guardians.revisit
    button: |
      **Guardians**:

      % for item in guardians:
        ${ item.address_block() }
        Relationship to minor: ${ item.relationship_to_minor }
        % if item.has_priority_appointment:
        (Has priority appointment)
        % endif

      % endfor
  - Edit: other_custodians.revisit
    button: |
      **Other Custodians**:

      % for item in other_custodians:
        ${ item.address_block() }
        Relationship to minor: ${ item.relationship_to_minor }
        Dates of care: ${ item.dates_of_care }

      % endfor
  - Edit: relatives.revisit
    button: |
      **${ children.familiar() }'s Relatives**:

      % for item in relatives:
        ${ item.address_block() }
        Relationship to minor: ${ item.relationship_to_minor }

      % endfor
  - Edit: current_acting_guardian
    button: |
      **Is anyone acting as ${ children.familiar() }'s Guardian or Conservator?**:
      ${ word(yesno(current_acting_guardian)) }
  - Edit: attorneys.revisit
    button: |
      **Attorneys**:

      % for item in attorneys:
        ${ item.address_block() }
        ${ item.bbo }

      % endfor
    show if: len(attorneys.complete_elements()) > 0
---
continue button field: children.revisit
question: |
  Edit children
subquestion: |
  ${ children.table }

  ${ children.add_action() }
---
table: children.table
rows: children
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Birthdate: |
      row_item.birthdate if defined("row_item.birthdate") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.county") else ""
edit:
  - name.first
  - birthdate
  - address.county
confirm: True
---
continue button field: users.revisit
question: |
  Edit users
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.last") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.unit") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
  - Signature: |
      row_item.signature if defined("row_item.signature") else ""
edit:
  - name.last
  - address.unit
  - phone_number
  - signature
confirm: True
---
continue button field: guardians.revisit
question: |
  Edit guardians
subquestion: |
  ${ guardians.table }

  ${ guardians.add_action() }
---
table: guardians.table
rows: guardians
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.last") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.unit") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
edit:
  - name.last
  - address.unit
  - phone_number
confirm: True
---
continue button field: attorneys.revisit
question: |
  Edit attorneys
subquestion: |
  ${ attorneys.table }

  ${ attorneys.add_action() }
---
table: attorneys.table
rows: attorneys
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.zip") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
edit:
  - name.first
  - address.zip
  - phone_number
confirm: True
---
#################### Review Blocks End #####################
---
id: download petition_for_appointment_of_guardian
event: petition_for_appointment_of_guardian_download
question: |
  All done
subquestion: |
  Your form is ready to download and deliver.

  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_petition_for_appointment_of_guardian'), label='Edit answers', color='info') }


  ${ al_user_bundle.download_list_html() }


  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

progress: 100
---
# ALDocument objects specify the metadata for each template
objects:
  - petition_for_appointment_of_guardian_post_interview_instructions: ALDocument.using(title="Instructions", filename="petition_for_appointment_of_guardian_next_steps.docx", enabled=True, has_addendum=False)
  - petition_for_appointment_of_guardian_attachment: ALDocument.using(title="Petition for Appointment of Guardian of a Minor", filename="petition_for_appointment_of_guardian", enabled=True, has_addendum=True)
---
code: |
  petition_for_appointment_of_guardian_attachment.overflow_fields["other_custodians"].label = "People with primary care or custody in the last 60 days"
  petition_for_appointment_of_guardian_attachment.overflow_fields["other_custodians"].overflow_trigger = 2

  petition_for_appointment_of_guardian_attachment.overflow_fields["assets"].label = "Assets"
  petition_for_appointment_of_guardian_attachment.overflow_fields["assets"].overflow_trigger = 2

  petition_for_appointment_of_guardian_attachment.overflow_fields.gathered = True
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[
      petition_for_appointment_of_guardian_post_interview_instructions,
      motion_temporary_guardian_attachment,
      petition_for_appointment_of_guardian_attachment,
      affidavit_of_care_or_custody_attachment,
      consent_to_nomination_by_a_minor_attachment,
      parental_consent_to_petition_attachment,
      affidavitofindigency_attachment,
      military_affidavit_bundle,
      bond_attachment,
      ],
      filename="petition_for_appointment_of_guardian",
      title="All forms to download for your records",
      enabled=True
      )
  - al_court_bundle: ALDocumentBundle.using(elements=[
      motion_temporary_guardian_attachment,
      petition_for_appointment_of_guardian_attachment,
      affidavit_of_care_or_custody_attachment,
      consent_to_nomination_by_a_minor_attachment,
      parental_consent_to_petition_attachment,
      military_affidavit_bundle,
      bond_attachment,
      affidavitofindigency_attachment,
      ],
      filename="petition_for_appointment_of_guardian",
      title="All forms to file in court",
      enabled=True
      )
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is
# used for "preview" and "final" keys, and logic in the template checks the value of
# `i` to show or hide the user's signature
attachment:
  name: Post-interview-Instructions
  filename: petition_for_appointment_of_guardian_next_steps
  docx template file: petition_for_appointment_of_guardian_next_steps.docx
  variable name: petition_for_appointment_of_guardian_post_interview_instructions[i]
  skip undefined: True
  tagged pdf: True
---
attachment:
  name: petition for appointment of guardian
  filename: petition_for_appointment_of_guardian
  variable name: petition_for_appointment_of_guardian_attachment[i]
  skip undefined: True
  pdf template file: petition_for_appointment_of_guardian.pdf
  fields:
    - "additional_request_exp": ${ additional_request_exp }
    - "docket_number": ${ docket_number }
    - "trial_court_division": ${ trial_court.division }
    - "children1_name_middle__1": ${ children[0].name.middle }
    - "children1_name_last__1": ${ children[0].name.last }
    - "children1_name_last__2": ${ children[0].name.last }
    - "children1_name_first__1": ${ children[0].name.first }
    - "children1_name_first__2": ${ children[0].name.first }
    - "children1_name_middle_initial": ${ children[0].name.middle_initial() }
    - "children1_age": ${ children[0].age_in_years() }
    - "children1_birthdate": ${ children[0].birthdate.format() }
    - "children1_address_city": ${ children[0].address.city }
    - "children1_address_address": ${ children[0].address.address }
    - "children1_address_unit": ${ children[0].address.unit }
    - "children1_address_state": ${ children[0].address.state }
    - "children1_address_zip": ${ children[0].address.zip }
    - "children1_address_county": ${ children[0].address.county }
    - "petitioner_is_interested_party": ${ who_is_making_petition == "interested_party" }
    - "petitioner_is_minor": ${ who_is_making_petition == "minor" }
    - "users1_name_first": ${ users[0].name.first }
    - "users1_name_middle_initial": ${ users[0].name.middle_initial() }
    - "users1_name_last": ${ users[0].name.last }
    - "users1_address_address": ${ users[0].address.address }
    - "users1_address_state": ${ users[0].address.state }
    - "users1_address_zip": ${ users[0].address.zip }
    - "users1_address_city": ${ users[0].address.city }
    - "users1_address_unit": ${ users[0].address.unit }
    - "users1_phone": ${ phone_number_formatted(users[0].phone_number) }
    - "users1_relationship_to_minor": ${ users[0].relationship_to_minor }
    - "users2_name_first": ${ users.item(1).name.first }
    - "users2_name_middle_initial": ${ users.item(1).name.middle_initial() }
    - "users2_name_last": ${ users.item(1).name.last }
    - "users2_address_address": ${ users.item(1).address.address }
    - "users2_address_state": ${ users.item(1).address.state }
    - "users2_address_zip": ${ users.item(1).address.zip }
    - "users2_address_city": ${ users.item(1).address.city }
    - "users2_address_unit": ${ users.item(1).address.unit }
    - "users2_phone": ${ phone_number_formatted(users.item(1).phone_number) }
    - "users2_relationship_to_minor": ${ users.item(1).relationship_to_minor }
    - "parents1_is_deceased": ${ parents[0].is_deceased }
    - "parents1_name_first": ${ parents[0].name.first }
    - "parents1_name_last": ${ parents[0].name.last }
    - "parents1_name_middle_initial": ${ parents[0].name.middle_initial() }
    - "parents1_address_city": ${ parents[0].address.city }
    - "parents1_address_address": ${ parents[0].address.address }
    - "parents1_address_unit": ${ parents[0].address.unit }
    - "parents1_address_state": ${ parents[0].address.state }
    - "parents1_address_zip": ${ parents[0].address.zip }
    - "parents2_is_deceased": ${ parents[1].is_deceased }
    - "parents2_name_first": ${ parents[1].name.first }
    - "parents2_name_middle_initial": ${ parents[1].name.middle_initial() }
    - "parents2_name_last": ${ parents[1].name.last }
    - "parents2_address_city": ${ parents[1].address.city }
    - "parents2_address_address": ${ parents[1].address.address }
    - "parents2_address_unit": ${ parents[1].address.unit }
    - "parents2_address_state": ${ parents[1].address.state }
    - "parents2_address_zip": ${ parents[1].address.zip }
    - "has_guardian_nomination_by_signed_doc_yes": ${ has_guardian_nomination_by_signed_doc_yes }
    - "has_guardian_nomination_by_signed_doc_no": ${ has_guardian_nomination_by_signed_doc_no }
    - "parents_consent_to_guardian_appointment": ${ reason_seeking_guardianship["parents_consent"] }
    - "parental_rights_terminated": ${ len(reason_seeking_guardianship.true_values().intersection({"parents_death", "parents_rights_terminated", "parents_surrendered_rights"})) >= 1 }
    - "parental_rights_terminated_by_court_order": ${ reason_seeking_guardianship["parents_rights_terminated"] }
    - "parental_rights_terminated_by_voluntary_surrender": ${ reason_seeking_guardianship["parents_surrendered_rights"] }
    - "parental_rights_terminated_by_death": ${ reason_seeking_guardianship["parents_death"] }
    - "parents_unavailable_to_exercise_parental_rights": ${ reason_seeking_guardianship["parents_unavailable"] }
    - "parents_unavailable_to_exercise_parental_rights_exp": ${ parents_unavailable_to_exercise_parental_rights_exp }
    - "parents_unfit_to_exercise_parental_rights": ${ reason_seeking_guardianship["parents_unfit"] }
    - "parents_unfit_to_exercise_parental_rights_exp": ${ parents_unfit_to_exercise_parental_rights_exp }
    - "previous_third_party_guardian_death_or_incapacitation": ${ reason_seeking_guardianship["previous_guardian"] }
    - "previous_third_party_guardian_death_or_incapacitation_exp": ${ previous_third_party_guardian_death_or_incapacitation_exp }
    - "petitioner_requesting_guardianship": ${ petitioner_requesting_guardianship }
    - "wants_sureties_waiver": ${ wants_sureties_waiver }
    - "other_primary_care_or_custody_yes": ${ len(other_custodians) > 0 }
    - "other_primary_care_or_custody_no": ${ len(other_custodians) < 1 }
    - "other_custodian1_name_first": ${ other_custodians[0].name.first }
    - "other_custodian1_name_middle_initial": ${ other_custodians[0].name.middle_initial() }
    - "other_custodian1_name_last": ${ other_custodians[0].name.last }
    - "other_custodian1_address_address": ${ other_custodians[0].address.address }
    - "other_custodian1_address_state": ${ other_custodians[0].address.state }
    - "other_custodian1_address_zip": ${ other_custodians[0].address.zip }
    - "other_custodian1_address_city": ${ other_custodians[0].address.city }
    - "other_custodian1_address_unit": ${ other_custodians[0].address.unit }
    - "other_custodian1_phone": ${ phone_number_formatted(other_custodians[0].phone_number) }
    - "other_custodian1_relationship_to_minor": ${ other_custodians[0].relationship_to_minor }
    - "other_custodian1_start_date": ${ other_custodians[0].start_date }
    - "other_custodian1_end_date": ${ other_custodians[0].end_date }
    - "other_custodian2_name_first": ${ other_custodians[1].name.first }
    - "other_custodian2_name_middle_initial": ${ other_custodians[1].name.middle_initial() }
    - "other_custodian2_name_last": ${ other_custodians[1].name.last }
    - "other_custodian2_address_address": ${ other_custodians[1].address.address }
    - "other_custodian2_address_state": ${ other_custodians[1].address.state }
    - "other_custodian2_address_zip": ${ other_custodians[1].address.zip }
    - "other_custodian2_address_city": ${ other_custodians[1].address.city }
    - "other_custodian2_address_unit": ${ other_custodians[1].address.unit }
    - "other_custodian2_phone": ${ phone_number_formatted(other_custodians[1].phone_number) }
    - "other_custodian2_relationship_to_minor": ${ other_custodians[1].relationship_to_minor }
    - "other_custodian2_start_date": ${ other_custodians[1].start_date }
    - "other_custodian2_end_date": ${ other_custodians[1].end_date }
    - "relatives1_name_first": ${ relatives[0].name.first }
    - "relatives1_name_middle_initial": ${ relatives[0].name.middle_initial() }
    - "relatives1_name_last": ${ relatives[0].name.last }
    - "relatives1_address_address": ${ relatives[0].address.address }
    - "relatives1_address_state": ${ relatives[0].address.state }
    - "relatives1_address_zip": ${ relatives[0].address.zip }
    - "relatives1_address_city": ${ relatives[0].address.city }
    - "relatives1_address_unit": ${ relatives[0].address.unit }
    - "relatives1_phone": ${ phone_number_formatted(relatives[0].phone_number) }
    - "relatives1_relationship_to_minor": ${ relatives[0].relationship_to_minor }
    - "relatives2_name_first": ${ relatives[1].name.first }
    - "relatives2_name_middle_initial": ${ relatives[1].name.middle_initial() }
    - "relatives2_name_last": ${ relatives[1].name.last }
    - "relatives2_address_address": ${ relatives[1].address.address }
    - "relatives2_address_state": ${ relatives[1].address.state }
    - "relatives2_address_zip": ${ relatives[1].address.zip }
    - "relatives2_address_city": ${ relatives[1].address.city }
    - "relatives2_address_unit": ${ relatives[1].address.unit }
    - "relatives2_phone": ${ phone_number_formatted(relatives[1].phone_number) }
    - "relatives2_relationship_to_minor": ${ relatives[1].relationship_to_minor }
    - "acting_guardian_or_conservator_yes": ${ acting_guardian_yes }
    - "acting_guardian_or_conservator_no": ${ acting_guardian_no }
    - "requested_guardians1_name_first": ${ requested_guardians[0].name.first }
    - "requested_guardians1_name_middle_initial": ${ requested_guardians[0].name.middle_initial() }
    - "requested_guardians1_name_last": ${ requested_guardians[0].name.last }
    - "requested_guardians1_address_address": ${ requested_guardians[0].address.address }
    - "requested_guardians1_address_state": ${ requested_guardians[0].address.state }
    - "requested_guardians1_address_zip": ${ requested_guardians[0].address.zip }
    - "requested_guardians1_address_city": ${ requested_guardians[0].address.city }
    - "requested_guardians1_address_unit": ${ requested_guardians[0].address.unit }
    - "requested_guardians1_phone": ${ phone_number_formatted(requested_guardians[0].phone_number) }
    - "requested_guardians1_relationship_to_minor": ${ requested_guardians[0].relationship_to_minor }
    - "requested_guardians1_has_priority_appointment": ${ requested_guardians[0].has_priority_appointment }
    - "requested_guardians2_has_priority_appointment": ${ requested_guardians[1].has_priority_appointment }
    - "requested_guardians2_name_first": ${ requested_guardians[1].name.first }
    - "requested_guardians2_name_middle_initial": ${ requested_guardians[1].name.middle_initial() }
    - "requested_guardians2_name_last": ${ requested_guardians[1].name.last }
    - "requested_guardians2_address_address": ${ requested_guardians[1].address.address }
    - "requested_guardians2_address_state": ${ requested_guardians[1].address.state }
    - "requested_guardians2_address_zip": ${ requested_guardians[1].address.zip }
    - "requested_guardians2_address_city": ${ requested_guardians[1].address.city }
    - "requested_guardians2_address_unit": ${ requested_guardians[1].address.unit }
    - "requested_guardians2_phone": ${ phone_number_formatted(requested_guardians[1].phone_number) }
    - "requested_guardians2_relationship_to_minor": ${ requested_guardians[1].relationship_to_minor }
    - "guardians1_name_first": ${ guardians[0].name.first }
    - "guardians1_name_middle_initial": ${ guardians[0].name.middle_initial() }
    - "guardians1_name_last": ${ guardians[0].name.last }
    - "guardians1_address_address": ${ guardians[0].address.address }
    - "guardians1_address_state": ${ guardians[0].address.state }
    - "guardians1_address_zip": ${ guardians[0].address.zip }
    - "guardians1_address_city": ${ guardians[0].address.city }
    - "guardians1_address_unit": ${ guardians[0].address.unit }
    - "guardians1_phone": ${ phone_number_formatted(guardians[0].phone_number) }
    - "guardians1_relationship_to_minor": ${ guardians[0].relationship_to_minor }
    - "children1_assets1_description": |
        % if len(assets) > 0:
        ${ assets[0].description}
        % endif
    - "children1_assets1_value": |
        ${ currency(assets.item(0).market_value) }
    - "children1_assets2_description": |
        % if len(assets) > 2:
        [See addendum]
        % endif
        ${ assets[1].description}
    - "children1_assets2_value": |
        ${ currency(assets.item(1).market_value) }
    - "minor_has_assets_yes": ${ len(assets) > 0 }
    - "minor_has_assets_no": ${ not len(assets) }
    - "minor_assets_total_value": ${ currency(assets.market_value()) }
    # It's a signature: test which file version this is; leave empty unless it's the final version)
    - "signature_date": ${ signature_date if esign else "" }
    - "users1_signature": ${ f"/s/ {users[0]}" if esign else "" }
    - "users1_signature_date": ${ today() }
    # - "users2_signature": ${ users.item(1).signature_if_final(i) }
    - "users2_signature": ${ f"/s/ {users[1]}" if esign else "" }
    - "users2_signature_date": |
        % if len(users.complete_elements()) > 1:
        ${ today() }
        % endif
    - "attorneys1_name": ${ attorneys[0] }
    - "attorneys1_address_address": ${ attorneys[0].address.address }
    - "attorneys1_address_unit": ${ attorneys[0].address.unit }
    - "attorneys1_address_city": ${ attorneys[0].address.city }
    - "attorneys1_address_state": ${ attorneys[0].address.state }
    - "attorneys1_address_zip": ${ attorneys[0].address.zip }
    - "attorneys1_phone": ${ phone_number_formatted(attorneys[0].phone_number) }
    - "attorneys1_bbo": ${ attorneys[0].bbo }
    - "minor_resides_in_court_county_division": ${ court_choice_reason["minors_county"] }
    - "guardian_nomination_probated_to_county_division": ${ court_choice_reason["will_county"] }
---
#################### Attachment Blocks End #####################
---
code: |
  user_ask_role = "plaintiff"
---