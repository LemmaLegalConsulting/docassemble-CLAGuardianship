---
include:
  - docassemble.ALAffidavitOfIndigency:affidavit_body.yml
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.MassAccess:massaccess.yml
  - shared.yml
  - military_affidavit.yml
  - application_for_appointment.yml
  - affidavit_disclosing_care_or_custody.yml
  - temporary_guardian.yml
---
metadata:
  title: >-
    Petition to Remove a Guardian
  short title: >-
    Petition to Remove a Guardian
  description: |-
    This interview helps someone in Massachusetts file a petition for the removal of a guardian of a minor.
  tags:
    - "FA-00-00-00-00"
    - "FA-04-00-00-00"
  authors:
    - Court Forms Online
  allowed_courts:
    - "Probate and Family Court"
  typical_role: "unknown"
  al_weaver_version: "playground"
  generated_on: "2024-02-13"
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MA"
---
code: |
  github_repo_name = 'docassemble-PetitionForRemovalOfGuardianOfMinor'
---
code: |
  interview_short_title = "File a petition for the removal of a guardian of a minor"
---
code: |
  al_form_type = "other"
---
objects:
  - responsible_parents: ALPeopleList.using(ask_number=True, maximum_number=2, complete_attribute="complete")
  - guardian_successors: ALPeopleList.using(maximum_number=2, complete_attribute="complete")
---
depends on:
  - who_is_making_petition
variable name: al_nav_sections
data:
  - review_case_information: About the case
  - review_petitioner_information: Petitioners
  - review_guardian_information: Guardians
  - review_requests: What you need
  - review_affidavit_disclosing_care_or_custody: Affidavit Disclosing Care or Custody Proceedings
    hidden: |
      showifdef("who_is_making_petition") == "minor"
  - review_military_affidavit: Military affidavit
  - section_fee_waiver: Fee waiver
    hidden: |
      showifdef("who_is_making_petition") == "minor"
  - review_petition_for_removal_of_guardian: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_petition_for_removal_of_guardian
code: |
  # Set the allowed courts for this interview
  allowed_courts = ['Probate and Family Court']

  nav.set_section("review_case_information")
  form_filled_by_attorney
  who_is_making_petition
  set_number_of_petitioners
  children.gather()
  if who_is_making_petition == 'minor':
    for child in children:
      child.birthdate
      if child.age_in_years() < 14:
        minor_age_kickout
      child.phone_number
  trial_court
  docket_number

  nav.set_section("review_petitioner_information")
  if who_is_making_petition != "minor":
    users.gather()
  else:
    set_user_to_minor

  nav.set_section("review_guardian_information")
  guardians.gather()

  nav.set_section("review_requests")
  bio_parents_can_resume_responsibilities
  set_responsible_parents_target_number
  if bio_parents_can_resume_responsibilities:
    responsible_parents.gather()

  if not bio_parents_can_resume_responsibilities:
    if guardian_successors.there_are_any: 
      guardian_successors.gather()

  interview_order_petition_for_removal_of_guardian = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  petition_for_removal_of_guardian_intro
  interview_order_petition_for_removal_of_guardian

  if who_is_making_petition != 'minor':
    nav.set_section("review_affidavit_disclosing_care_or_custody")
    interview_order_affidavit_disclosing_care_or_custody

  nav.set_section("review_military_affidavit")
  military_affidavit_intro
  knows_status_already
  interview_order_military_affidavit
  military_affidavit_case_name

  if who_is_making_petition != 'minor':
    nav.set_section("section_fee_waiver")
    if wants_fee_waiver:
      set_fee_waiver_defaults
      ask_affidavit_questions

    if not form_filled_by_attorney:
      if who_is_making_petition == 'parent':
        parent_wants_lawyer
        if parents_making_petition == 'both':
          relationship_to_minor
        set_parent_relationship
  set_application_for_appointment_of_counsel

  nav.set_section("section_download_petition")
  if esign:
    signature_date
  petition_for_removal_of_guardian_download
---
id: petition_for_removal_of_guardian
continue button field: petition_for_removal_of_guardian_intro
question: |
  Ask the court to remove a guardian for a minor
subquestion: |
  A guardian for a minor is an adult who gets permission from a judge to make decisions for 
  someone who is under 18.

  This interview will help you make a "Petition for the Removal of a Guardian of a Minor (MPC 240),"
  and more forms that are filed with the petition.

  You can use this interview to ask the court to remove or name a new guardian if:

    * you or a child you know has a court-appointed guardian, **and** 
    * you have a reason for the guardian to be removed or replaced.

  You will need to explain why the guardian should be removed or replaced.

  <h2 class="h4">Before you get started</h2>

  Please gather:

  1. Information about the minor's parents, including name, contact information, and whether they are living.
  2. Information about anyone **else** who has taken care of the minor over the last 60 days.
  3. Information about **other court cases** that have to do with the minor.
  4. Your own financial information, unless you are the minor.

  <h2 class="h4">When you are finished</h2>

  You need to print and file the documents that this interview makes with the court.

  Some of the documents may need to be signed in front of a notary public.

  Most people take about 20 minutes to finish this interview.
---
#################### Object Blocks Start #####################
---
code: |
  users[i].name.first
  users[i].address.address
  users[i].complete = True
---
code: |
  parents[i].name.first
  parents[i].complete = True
---
code: |
  children[i].name.first
  children[i].birthdate
  children[i].complete = True
---
code: |
  attorneys[i].name.first
  attorneys[i].address.address
  attorneys[i].complete = True
---
code: |
  guardian_successors[i].name.first
  guardian_successors[i].complete = True
---
code: |
  children.there_is_another = False
---
code: |
  attorneys.there_is_another = False
---
code: |
  if len(guardian_successors.complete_elements()) > 1:
    guardian_successors.there_is_another = False
---
code: |
  if who_is_making_petition == "minor":
    users[0].name.first = children[0].name.first
    users[0].name.last = children[0].name.last
    users[0].name.middle = children[0].name.middle
    users[0].name.suffix = children[0].name.suffix
    users[0].address.address = children[0].address.address
    users[0].address.unit = children[0].address.unit
    users[0].address.city = children[0].address.city
    users[0].address.state = children[0].address.state
    users[0].address.zip = children[0].address.zip
    users[0].phone_number = children[0].phone_number
    users[0].relationship_to_minor = "Self"
    users.auto_gather = False
    users.gathered = True
  set_user_to_minor = True
---
code: |
  if who_is_making_petition == 'parent':
    if parents_making_petition == 'both':
      users.there_is_another = True
    else:
      users.there_is_another = False
  else:
    users.there_is_another = False

  set_number_of_petitioners = True
---
code: |
  if bio_parents_can_resume_responsibilities:
    if responsible_parents_target_number == 'one_parent':
      responsible_parents.target_number = 1
    elif responsible_parents_target_number == 'both_parents':
      responsible_parents.target_number = 2

  set_responsible_parents_target_number = True
---
code: |
  affidavitofindigency_attachment.enabled = who_is_making_petition != "minor" and wants_fee_waiver and is_indigent
---
code: |
  if who_is_making_petition != 'minor':
    if not form_filled_by_attorney:
      if who_is_making_petition == 'parent':
        if parent_wants_lawyer:
          Application_for_appointment_attachment.enabled = True
  
  set_application_for_appointment_of_counsel = True
---
code: |
  if parents_making_petition == 'father':
    want_counsel_for_father = True
  elif parents_making_petition == 'mother':
    want_counsel_for_mother = True
  elif parents_making_petition == 'both':
    if relationship_to_minor == 'father':
      want_counsel_for_father = True
    elif relationship_to_minor == 'mother':
      want_counsel_for_mother = True

  set_parent_relationship = True
---
#################### Object Blocks End #####################
---
#################### Question Blocks Start #####################
---
id: petitioner information
sets:
  - users[0].name.first
  - users[0].name.last
  - users[0].name.middle
  - users[0].name.suffix
  - users[0].address.address
  - users[0].address.unit
  - users[0].address.city
  - users[0].address.state
  - users[0].address.zip
  - users[0].address.country
  - users[0].phone_number
question: |
  % if form_filled_by_attorney:
  Tell us about the petitioner
  % else:
  Tell us about yourself
  % endif
fields:
  - code: |
      users[0].name_fields()
  - code: |
      users[0].address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE, show_country=False)
  - Primary phone number: users[0].phone_number
    datatype: al_international_phone
---
id: petitioner information
sets:
  - users[i].name.first
  - users[i].name.last
  - users[i].name.middle
  - users[i].name.suffix
  - users[i].address.address
  - users[i].address.unit
  - users[i].address.city
  - users[i].address.state
  - users[i].address.zip
  - users[i].address.country
  - users[i].phone_number
question: |
  Tell us about the other petitioner
fields:
  - code: |
      users[i].name_fields()
  - code: |
      users[i].address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE, show_country=False)
  - Primary phone number: users[i].phone_number
    datatype: al_international_phone
validation code: |
  if len(users.complete_elements()) > 0:
    users.there_is_another = False
---
id: minor info
sets:
  - children[0].name.first
  - children[0].name.last
  - children[0].name.middle
  - children[0].name.suffix
  - children[0].address.address
  - children[0].address.unit
  - children[0].address.city
  - children[0].address.state
  - children[0].address.zip
  - children[0].address.country
question: |
  % if who_is_making_petition == "minor" and (not form_filled_by_attorney):
  Tell us about yourself
  % else:
  Who is the minor in this case?
  % endif
fields:
  - code: |
      children[0].name_fields()
  - code: |
      children[0].address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE, show_country=False)
---
id: minor birthdate
question: |
  % if who_is_making_petition == "minor" and (not form_filled_by_attorney):
  When were you born?
  % else:
  When was ${ children.familiar() } born?
  % endif
fields:
  - Birthdate: children[0].birthdate
    datatype: date
---
id: minor age kickout
event: minor_age_kickout
question: |
  We're sorry, but you cannot use this tool to create a *Petition for Removal of Guardian of Minor*
subquestion: |
  A minor needs to be **at least 14 years** old to fill out this petition for themselves.

  If you made a mistake, select **Undo** to go back and change your answer.
---
id: minor phone number
sets:
  - children[0].phone_number
question: |
  % if who_is_making_petition == "minor" and (not form_filled_by_attorney):
  What is your phone number?
  % else:
  What is ${ children.familiar() }'s phone number?
  % endif
fields:
  - Primary phone number: children[0].phone_number
    datatype: al_international_phone
---
id: waiving_cost
question: |
  You may qualify for a fee waiver
subquestion: |
  There is no filing fee to ask for a guardian. 

  But you may need to pay:

  * A $15 citation fee
  * And a fee to **serve** (give) the papers to the other people who need to know about this case,
    or to publish notice if you cannot find them to serve them in person.

  The judge may also want to know your income to decide if you can afford to
  guarantee the **surety bond**.

  If you earn under a certain amount, you can ask the court to help pay the citation fee,
  serve the papers and to waive the surety bond.
fields:
  - Do you want to find out if you qualify for a fee waiver?: wants_fee_waiver
    datatype: yesnoradio
---
id: petitioners
question: |
  Who is asking to change or remove the guardian?
fields:
  - I am: who_is_making_petition
    datatype: radio
    choices:
      - The minor's parent(s): parent
      - The minor: minor
      - A person interested in the minor's welfare: interested_person
  - And my specific relationship is: parents_making_petition
    datatype: radio
    choices:
      - The minor's mother: mother
      - The minor's father: father
      - Both the parents are making this request together: both
    show if:
      variable: who_is_making_petition
      is: parent
  - And my relationship or interest is: my_interest_is
    datatype: area
    show if:
      variable: who_is_making_petition
      is: interested_person
    help: |
      Explain how you are related to the child, such as 
      a family relationship or a professional relationship.

      You do not need to explain why you want this petition 
      in this box.
---
id: relationship to minor
question: |
  What is your relationship to ${ children.familiar() }?
fields:
  - I am ${ children.familiar() }'s: relationship_to_minor
    choices:
      - Father: father
      - Mother: mother
---
id: choose a court
question: |
  What court is your case in?
subquestion: |
  **Check the case documents to make sure you select the correct court.**

  % if len(all_matches) and all_courts.filter_courts(allowed_courts):
  % if who_is_making_petition == "minor":
  Because you live in ${ children[0].address.city }, we think the court
  might be ${ court_short_label(all_matches[0]) }.
  % else:
  Because ${ children[0].familiar() } lives in ${ children[0].address.city }, 
  we think the court might be ${ court_short_label(all_matches[0]) }.
  % endif

  ${ map_of(combined_locations(all_matches)) }

  % endif

fields:
  - The case in is: trial_court
    datatype: object
    object labeler: court_short_label
    choices: all_courts.filter_courts(allowed_courts)
    default: |
      next(iter(all_matches), None)
---
id: docket number
question: |
  What is your case number?
fields:
  - Case number: docket_number
    maxlength: 25
    required: False
---
id: guardian_successor information
sets:
  - guardian_successors[i].name.first
  - guardian_successors[i].name.last
  - guardian_successors[i].name.middle
  - guardian_successors[i].name.suffix
question: |
  Tell us about the ${ ordinal(i) } new guardian for ${ children.familiar() }
fields:
  - code: |
      guardian_successors[i].name_fields()
---
id: guardian_successors there_are_any
question: |
  New guardians
subquestion: |
  You can ask the court to name **up to two people** as new guardians for ${ children.familiar() }.
fields:
  - Do you want someone else to be ${ children.familiar() }'s new guardian?: guardian_successors.there_are_any
    datatype: yesnoradio
---
id: guardian_successors there_is_another
question: |
  Add another new guardian?
fields:
  - Do you want to add another person as a new guardian for ${ children.familiar() }?: successor_guardians.there_is_another
    datatype: yesnoradio
---
id: guardian information
sets:
  - guardians[i].name.first
  - guardians[i].name.last
  - guardians[i].name.middle
  - guardians[i].name.suffix
  - guardians[i].address.address
  - guardians[i].address.unit
  - guardians[i].address.city
  - guardians[i].address.state
  - guardians[i].address.zip
  - guardians[i].address.country
question: |
  Tell us about
  % if who_is_making_petition == "minor" and (not form_filled_by_attorney):
  your
  % else:
  ${ children[0].familiar() }'s
  % endif
  % if len(guardians.complete_elements()) < 1:
  current guardian(s)
  % else:
  other guardian
  % endif
subquestion: |
  % if len(guardians.complete_elements()) < 1:
  **If ${ children[0].familiar() } has more than one guardian**, you will get the chance to add them after this screen. 

  You can add **up to two guardians** to this petition. 
  % endif
fields:
  - code: |
      guardians[i].name_fields()
  - code: |
      guardians[i].address_fields()
  - Phone number: guardians[i].phone_number
    datatype: al_international_phone
  - When was this person appointed as ${ children[0].familiar() }'s guardian?: guardians[i].appointment_date
    datatype: date
    required: True
validation code: |
  if len(guardians.complete_elements()) > 0:
    guardians.there_is_another = False
---
id: guardians there_is_another
question: |
  % if who_is_making_petition == "minor" and (not form_filled_by_attorney):
  Do you
  % else:
  Does ${ children[0].familiar() }
  % endif 
  have another guardian?
fields:
  - no label: guardians.there_is_another
    datatype: yesnoradio
---
id: Reasons for removing guardian
question: |
  Why do you want to remove
  % if (who_is_making_petition == 'minor') and (not form_filled_by_attorney):
  your
  % else:
  ${ children[0].familiar() }'s
  % endif
  % if len(guardians.complete_elements()) < 2:
  guardian?
  % else:
  guardians?
  % endif
subquestion: |
  Check all reasons that apply.
fields:
  - ${ f"My parents" if (who_is_making_petition == 'minor' and not form_filled_by_attorney) else children[0].familiar().possessive('parents') } are able to care for ${ f"me" if (who_is_making_petition == 'minor' and not form_filled_by_attorney) else f"them" } now: bio_parents_can_resume_responsibilities
    datatype: yesno
  - How many?: responsible_parents_target_number
    choices:
      - One parent: one_parent
      - Both parents: both_parents
    show if: bio_parents_can_resume_responsibilities
  - Explain why: why_parents_can_resume_responsibility
    datatype: area
    show if: bio_parents_can_resume_responsibilities
  - ${ f"I" if (who_is_making_petition == 'minor' and not form_filled_by_attorney) else children[0].familiar() } was adopted: minor_adopted
    datatype: yesno
  - Something else: has_attachment
    datatype: yesno
  - Explain why: other_reason_for_removal
    datatype: area
    show if: has_attachment
validation code: |
  if not (bio_parents_can_resume_responsibilities or minor_adopted or has_attachment):
    validation_error("Select at least one reason", field="has_attachment")
---
id: responsible parent information
sets:
  - responsible_parents[i].name.first
  - responsible_parents[i].name.last
  - responsible_parents[i].name.middle
  - responsible_parents[i].name.suffix
  - responsible_parents[i].address.address
  - responsible_parents[i].address.unit
  - responsible_parents[i].address.city
  - responsible_parents[i].address.state
  - responsible_parents[i].address.zip
  - responsible_parents[i].address.country
  - responsible_parents[i].phone_number
  - responsible_parents[i].appointment_date
question: |
  ${ capitalize(ordinal(i)) } parent resuming responsibility for
  % if who_is_making_petition == "minor" and (not form_filled_by_attorney):
  you
  % else:
  ${ children[0].familiar() }
  % endif 
fields:
  - code: |
      responsible_parents[i].name_fields()
  - code: |
      responsible_parents[i].address_fields()
  - Phone number: responsible_parents[i].phone_number
    datatype: al_international_phone
---
id: Attorney's information
question: |
  Attorney's information
subquestion: |
  If you have an attorney, provide their information
fields:
  - "BBO Number": attorneys[0].bbo
    datatype: number
---
code: |
  if len(attorneys.complete_elements()) > 0:
    attorneys.there_is_another = False
---
id: preview petition_for_removal_of_guardian
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   

  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_petition_for_removal_of_guardian'), label='Edit answers', color='info') }

  Remember to come back to this window to continue and sign your form.
continue button field: petition_for_removal_of_guardian_preview_question
---
code: |
  signature_fields = [user.attr_name('signature') for user in users]
---
code: |
  addresses_to_search = [children[0].address]
---
#################### Question Blocks End #####################
---
#################### Review Blocks Start #####################
---
id: Petition for Removal of Guardian of review screen
event: review_petition_for_removal_of_guardian
question: |
  Review your answers
review:
  - Edit: docket_number
    button: |
      **Docket number**:
      ${ docket_number }
  - Edit: trial_court
    button: |
      **Trial court**

      % if defined("trial_court.division"):
      * division: ${ trial_court.division }
      % endif
  - Edit: children.revisit
    button: |
      **Children**

      % for item in children:
        * ${ item }
      % endfor
  - Edit: users.revisit
    button: |
      **users**

      % for item in users:
        * ${ item }
      % endfor
  - Edit: guardians.revisit
    button: |
      **Guardians**

      % for item in guardians:
        * ${ item }
      % endfor
  - Edit: guardians[0].appointment_date
    button: |
      **Date of guardians1 appointment**:
      ${ guardians[0].appointment_date }
  - Edit: guardians[1].appointment_date
    button: |
      **Date of guardians2 appointment**:
      ${ guardians[1].appointment_date }
  - Edit: bio_parents_can_resume_responsibilities
    button: |
      **Bio parents can resume responsibilities**:
      ${ word(yesno(bio_parents_can_resume_responsibilities)) }
  - Edit: responsible_parents.revisit
    button: |
      **Responsible parents**

      % for item in responsible_parents:
        * ${ item }
      % endfor
  - Edit: minor_adopted
    button: |
      **Minor adopted**:
      ${ word(yesno(minor_adopted)) }
  - Edit: has_attachment
    button: |
      **Has attachment**:
      ${ word(yesno(has_attachment)) }
  - Edit: guardian_successors.revisit
    button: |
      **Guardian successors**

      % for item in guardian_successors:
        * ${ item }
      % endfor
  - Edit: attorneys.revisit
    button: |
      **Attorneys**

      % for item in attorneys:
        * ${ item }
      % endfor
  - Edit: attorneys[0].bbo
    button: |
      **BBO Number**:
      ${ attorneys[0].bbo }
---
continue button field: children.revisit
question: |
  Edit children
subquestion: |
  ${ children.table }

  ${ children.add_action() }
---
table: children.table
rows: children
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True
---
continue button field: users.revisit
question: |
  Edit users
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.city") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
  - Signature: |
      row_item.signature if defined("row_item.signature") else ""
edit:
  - name.first
  - address.city
  - phone_number
  - signature
confirm: True
---
continue button field: guardians.revisit
question: |
  Edit guardians
subquestion: |
  ${ guardians.table }

  ${ guardians.add_action() }
---
table: guardians.table
rows: guardians
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.city") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
edit:
  - name.first
  - address.city
  - phone_number
confirm: True
---
continue button field: responsible_parents.revisit
question: |
  Edit responsible_parents
subquestion: |
  ${ responsible_parents.table }

  ${ responsible_parents.add_action() }
---
table: responsible_parents.table
rows: responsible_parents
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.city") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
edit:
  - name.first
  - address.city
  - phone_number
confirm: True
---
continue button field: guardian_successors.revisit
question: |
  Edit guardian_successors
subquestion: |
  ${ guardian_successors.table }

  ${ guardian_successors.add_action() }
---
table: guardian_successors.table
rows: guardian_successors
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True
---
continue button field: attorneys.revisit
question: |
  Edit attorneys
subquestion: |
  ${ attorneys.table }

  ${ attorneys.add_action() }
---
table: attorneys.table
rows: attorneys
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.zip") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
edit:
  - name.first
  - address.zip
  - phone_number
confirm: True
---
#################### Review Blocks End #####################
---
id: download petition_for_removal_of_guardian
event: petition_for_removal_of_guardian_download
question: |
  All done
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.

  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_petition_for_removal_of_guardian'), label='Edit answers', color='info') }


  ${ al_user_bundle.download_list_html() }


  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

progress: 100
---
#################### Attachment Blocks Start #####################
---
# ALDocument objects specify the metadata for each template
objects:
  - petition_for_removal_of_guardian_Post_interview_instructions: ALDocument.using(title="Instructions", filename="petition_for_removal_of_guardian_next_steps.docx", enabled=True, has_addendum=False)
  - petition_for_removal_of_guardian: ALDocument.using(title="Petition for Removal of Guardian of Minor", filename="petition_for_removal_of_guardian", enabled=True, has_addendum=True, default_overflow_message=" (Continued in Attachment)")
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[
      petition_for_removal_of_guardian_Post_interview_instructions,
      petition_for_removal_of_guardian,
      motion_temporary_guardian_attachment,
      Application_for_appointment_attachment,
      affidavit_of_care_or_custody_attachment,
      affidavitofindigency_attachment,
      military_affidavit_bundle,
      ],
      filename="Petition for Removal of Guardian",
      title="All forms to download for your records",
      enabled=True
      )
  - al_court_bundle: ALDocumentBundle.using(elements=[
      petition_for_removal_of_guardian,
      motion_temporary_guardian_attachment,
      Application_for_appointment_attachment,
      affidavit_of_care_or_custody_attachment,
      military_affidavit_bundle,
      affidavitofindigency_attachment,
      ],
      filename="Petition for Removal of Guardian",
      title="All forms to file in court",
      enabled=True
      )
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is
# used for "preview" and "final" keys, and logic in the template checks the value of
# `i` to show or hide the user's signature
attachment:
  name: Post-interview-Instructions
  filename: petition_for_removal_of_guardian_next_steps
  docx template file: Petition_for_Removal_of_Guardian_of_Minor_next_steps.docx
  variable name: petition_for_removal_of_guardian_Post_interview_instructions[i]
  skip undefined: True
  tagged pdf: True
---
code: |
  petition_for_removal_of_guardian.overflow_fields["my_interest_is"].label = "Continued from Section 1 - Nature of petitioner's interest:"
  petition_for_removal_of_guardian.overflow_fields["my_interest_is"].overflow_trigger = 240
  petition_for_removal_of_guardian.overflow_fields["why_parents_can_resume_responsibility"].label = "Continued from Section 3 - Parents can resume parental responsibilities:"
  petition_for_removal_of_guardian.overflow_fields["why_parents_can_resume_responsibility"].overflow_trigger = 340
  petition_for_removal_of_guardian.overflow_fields["other_reason_for_removal"].label = "Continued from Section 3 - Other:"
  petition_for_removal_of_guardian.overflow_fields["other_reason_for_removal"].overflow_trigger = 340
  petition_for_removal_of_guardian.overflow_fields.gathered = True
---
attachment:
  name: Petition for Removal of Guardian of
  filename: petition_for_removal_of_guardian
  variable name: petition_for_removal_of_guardian[i]
  skip undefined: True
  pdf template file: petition_for_removal_of_guardian.pdf
  fields:
    - "docket_number": ${ docket_number }
    - "trial_court_division": ${ trial_court.division }
    - "children1_name_middle": ${ children[0].name.middle }
    - "children1_name_last": ${ children[0].name.last }
    - "children1_name_first": ${ children[0].name.first }
    - "users1_name_middle_initial": ${ users[0].name.middle_initial() }
    - "users1_name_last": ${ users[0].name.last }
    - "users1_name_first": ${ users[0].name.first }
    - "users1_address_address": ${ users[0].address.address }
    - "users1_address_unit": ${ users[0].address.unit }
    - "users1_address_state": ${ users[0].address.state }
    - "users1_address_zip": ${ users[0].address.zip }
    - "users1_address_city": ${ users[0].address.city }
    - "users1_phone": ${ users[0].phone_number }
    - "users2_name_middle_initial": ${ users.item(1).name.middle_initial() }
    - "users2_name_last": ${ users.item(1).name.last }
    - "users2_name_first": ${ users.item(1).name.first }
    - "users2_address_address": ${ users.item(1).address.address }
    - "users2_address_unit": ${ users.item(1).address.unit }
    - "users2_address_state": ${ users.item(1).address.state }
    - "users2_address_zip": ${ users.item(1).address.zip }
    - "users2_address_city": ${ users.item(1).address.city }
    - "users2_phone": ${ users.item(1).phone_number }
    - "petitioner_is_parent": ${ who_is_making_petition == "parent" }
    - "petitioner_is_mother": ${ who_is_making_petition == "parent" and parents_making_petition == "mother" }
    - "petitioner_is_father": ${ who_is_making_petition == "parent" and parents_making_petition == "father" }
    - "petitioner_is_both_parents": ${ who_is_making_petition == "parent" and parents_making_petition == "both" }
    - "petitioner_is_minor": ${ who_is_making_petition == "minor" }
    - "petitioner_is_interested_party": ${ who_is_making_petition == "interested_person" }
    - "guardians1_name_last": ${ guardians[0].name.last }
    - "guardians1_name_middle_initial": ${ guardians[0].name.middle_initial() }
    - "guardians1_name_first": ${ guardians[0].name.first }
    - "guardians1_address_address": ${ guardians[0].address.address }
    - "guardians1_address_unit": ${ guardians[0].address.unit }
    - "guardians1_address_state": ${ guardians[0].address.state }
    - "guardians1_address_zip": ${ guardians[0].address.zip }
    - "guardians1_address_city": ${ guardians[0].address.city }
    - "guardians1_phone": ${ guardians[0].phone_number }
    - "guardians1_appointment_date": ${ guardians[0].appointment_date.format() }
    - "guardians2_name_last": ${ guardians[1].name.last }
    - "guardians2_name_middle_initial": ${ guardians[1].name.middle_initial() }
    - "guardians2_name_first": ${ guardians[1].name.first }
    - "guardians2_address_address": ${ guardians[1].address.address }
    - "guardians2_address_unit": ${ guardians[1].address.unit }
    - "guardians2_address_state": ${ guardians[1].address.state }
    - "guardians2_address_zip": ${ guardians[1].address.zip }
    - "guardians2_address_city": ${ guardians[1].address.city }
    - "guardians2_phone": ${ guardians[1].phone_number }
    - "guardians2_appointment_date": ${ guardians[1].appointment_date.format() }
    - "bio_parents_can_resume_responsibilities": ${ bio_parents_can_resume_responsibilities }
    - "responsible_parents1_name_middle_initial": ${ responsible_parents[0].name.middle_initial() }
    - "responsible_parents1_name_first": ${ responsible_parents[0].name.first }
    - "responsible_parents1_name_last": ${ responsible_parents[0].name.last }
    - "responsible_parents1_address_address": ${ responsible_parents[0].address.address }
    - "responsible_parents1_address_unit": ${ responsible_parents[0].address.unit }
    - "responsible_parents1_address_state": ${ responsible_parents[0].address.state }
    - "responsible_parents1_address_zip": ${ responsible_parents[0].address.zip }
    - "responsible_parents1_address_city": ${ responsible_parents[0].address.city }
    - "responsible_parents1_phone": ${ responsible_parents[0].phone_number }
    - "responsible_parents2_name_middle_initial": ${ responsible_parents[1].name.middle_initial() }
    - "responsible_parents2_name_last": ${ responsible_parents[1].name.last }
    - "responsible_parents2_name_first": ${ responsible_parents[1].name.first }
    - "responsible_parents2_address_address": ${ responsible_parents[1].address.address }
    - "responsible_parents2_address_unit": ${ responsible_parents[1].address.unit }
    - "responsible_parents2_address_state": ${ responsible_parents[1].address.state }
    - "responsible_parents2_address_zip": ${ responsible_parents[1].address.zip }
    - "responsible_parents2_address_city": ${ responsible_parents[1].address.city }
    - "responsible_parents2_phone": ${ responsible_parents[1].phone_number }
    - "minor_adopted": ${ minor_adopted }
    - "has_attachment": ${ has_attachment }
    - "guardian_successors1_name_middle_initial": ${ guardian_successors[0].name.middle_initial() }
    - "guardian_successors1_name_last": ${ guardian_successors[0].name.last }
    - "guardian_successors1_name_first": ${ guardian_successors[0].name.first }
    - "guardian_successors2_name_middle_initial": ${ guardian_successors[1].name.middle_initial() }
    - "guardian_successors2_name_last": ${ guardian_successors[1].name.last }
    - "guardian_successors2_name_first": ${ guardian_successors[1].name.first }
    - "users1_signature": ${ f"/s/ {users[0]}" if esign else "" }
    - "users1_signature_date": ${ today() }
    - "users2_signature": |
        % if len(users.complete_elements()) > 1 and esign:
        ${ f"/s/ {users[1]}" }
        % else:
        ${ "" }
        % endif
    - "users2_signature_date": |
        % if len(users.complete_elements()) > 1 and esign:
        ${ today() }
        % endif
    - "attorneys1_name": ${ attorneys[0] }
    - "attorneys1_address_address": ${ attorneys[0].address.address }
    - "attorneys1_address_unit": ${ attorneys[0].address.unit }
    - "attorneys1_address_city": ${ attorneys[0].address.city }
    - "attorneys1_address_state": ${ attorneys[0].address.state }
    - "attorneys1_address_zip": ${ attorneys[0].address.zip }
    - "attorneys1_phone": ${ attorneys[0].phone_number }
    - "attorneys1_bbo": ${ attorneys[0].bbo }
    - my_interest_is: |
        % if petitioner_is_interested_party:
        ${ petition_for_removal_of_guardian.safe_value('my_interest_is') }
        % else:
        ${ "" }
        % endif
    - why_parents_can_resume_responsibility: |
        % if bio_parents_can_resume_responsibilities:
        ${ petition_for_removal_of_guardian.safe_value('why_parents_can_resume_responsibility') }
        % else:
        ${ "" }
        % endif
    - other_reason_for_removal: |
        % if has_attachment:
        ${ petition_for_removal_of_guardian.safe_value('other_reason_for_removal') }
        % else:
        ${ "" }
        % endif
---
attachment:
  variable name: petition_for_removal_of_guardian.addendum
  docx template file: petition_for_removal_of_guardian_attachment.docx
---
#################### Attachment Blocks End #####################
---