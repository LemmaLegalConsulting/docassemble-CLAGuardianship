---
code: |
  addresses_to_search = [users[0].address]
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MA"
---
code: |
  github_repo_name =  'docassemble-MilitaryAffidavit'
---
code: |
  interview_short_title = "Tell the court whether any of the people in your case have served in the military"
---
code: |
  al_form_type = "existing_case" 
---
objects:
  - other_parties: ALPeopleList
  - additional_parties: ALPeopleList
  - serving_parties: ALPeopleList
  - unsure_serving_parties: ALPeopleList.using(auto_gather=False, gathered=True)
  - concluded_service_parties: ALPeopleList.using(auto_gather=False, gathered=True)
---
sections:
  - review_military_affidavit: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_military_affidavit
code: |
  # Set the allowed courts for this interview
  form_filled_by_attorney
  user_ask_role
  users.gather()
  other_parties.gather()
  additional_parties.gather()
  set_all_military_statuses
  if any([party.military_status == "past" for party in users.union(other_parties + additional_parties)]):
    set_concluded_service_dates
  if any([party.military_status == "unknown" for party in users.union(other_parties + additional_parties)]):
    bond_agreement_i_understand
  review_military_status
  # if len(serving_parties) < len(users) + len(other_parties) + len(additional_parties):
  #   ask_concluded_service_parties
  #   if len(concluded_service_parties.elements):
  #     set_concluded_service_dates
  #   for party in concluded_service_parties.elements:
  #     party.service_ended_date
  # if (len(serving_parties) + len(concluded_service_parties)) < len(users) + len(other_parties) + len(additional_parties):
  #   ask_unsure_serving_parties
  # if len(serving_parties) + len(concluded_service_parties) + len(unsure_serving_parties) < len(users) + len(other_parties) + len(additional_parties):
  #   confirm_not_serving_parties
  trial_court
  docket_numbers
  has_used_scra_site
  signature_date
  military_affidavit_case_name
  interview_order_military_affidavit = True
---
code: |
  concluded_service_parties[i].name.first
  concluded_service_parties[i].service_ended_date
  concluded_service_parties[i].complete = True
---
id: Military_Affidavit
continue button field: military_affidavit_intro
question: |
  Military Affidavit
subquestion: |
  This interview will help you fill out a Military Affidavit,
  which declares whether anybody who is part of this case is
  currently serving in a branch of the U.S. military.

  If someone is in the military, they may have special
  protections under the Servicemembers Civil Relief Act.

  This affidavit has to be filed even if none of the parties are
  in the military right now.

  Use the best information you know. But you must explain either that:

  * you know the military status of each party, or 
  * you searched the [Servicemembers Civil Relief Act website](https://scra.dmdc.osd.mil/)
    to find out their military status
---
id: explanation diligent search
question: |
  Before you answer the next questions
subquestion: |
  On the next few screens, we will ask you about the military status 
  of:

  * ${ users }
  % if len(other_parties):
  * ${ other_parties }
  % endif
  % if len(additional_parties):
  * ${ additional_parties }
  % endif
fields:
  - Do you already know the military status of **each** party in this case?: knows_status_already
    datatype: yesnoradio
  - note: |
      If you do not have personal knowledge of each party's military status,
      you **must** search the [Servicemembers Civil Relief Act website](https://scra.dmdc.osd.mil/).

      1. Copy a [link to this interview](${ interview_url() }) to return to it later. You can also 
         leave this window or tab open.
      1. Click the link to visit the [Servicemembers Civil Relief Act website](https://scra.dmdc.osd.mil/)
         and search for the name of the party who you are unsure about.
      1. **Save** a copy of the results as a PDF or take a screenshot that shows the search
         results. You can also print a copy and attach it to this form later.

        You can take a minute to do that now. The website will open in a new tab. When
        you have finished your search and saved the results, close the tab to return to this interview.
    show if: 
      variable: knows_status_already
      is: False
---
variable name: military_status_labels
data:
  - Yes: "yes"
  - No: "no"
  - Past: "past"
  - Unknown: "unknown"
---
continue button field: set_all_military_statuses
id: select all statuses
question: |
  Select the current **military service** of **each** party in this case
subquestion: |
  For each party, including yourself:

  * If they are currently serving active duty in the military, answer "Yes".
  * If they are not serving in the military, answer "No"
  * If they concluded their service, answer "Past"
  * If you are unsure, answer "Unknown"

  ${ collapse_template(explain_military_service)}
fields:
  - code: |
      [
        {
          "field": party.attr_name("military_status"),
          "label": f"{ party.name_full() }",
          "item grid": {
            "width": 3,
            "breakpoint": "sm"
          },
          "datatype": "radio",
          "choices": military_status_labels
        }
        for party
        in sorted(users.union(other_parties + additional_parties))
      ]
---
template: explain_military_service
subject: |
  What is military service?
content: |
  For the purposes of this form, "military service" includes the following:

  1. Members of the armed forces on active duty.

  This refers to individuals serving full time in the Army, Navy, Air Force, Marine Corps, or Coast Guard, including those in the Reserves and National Guard when called to active duty.
  
  2. Members of the National Guard on service under a call to active service for more than 30 consecutive days.

  This includes National Guard members who are called to active duty by the President or the Secretary of Defense for emergencies, wars, or other national defense needs.

  3. Commissioned officers of the Public Health Service or the National Oceanic and Atmospheric Administration (NOAA) on active service.

  These commissioned officers are also considered to be in "military service" when performing their duties.

  Someone who is otherwise in active service but is currently absent because of sickness, injury, leave, or other lawful cause is still considered to be in active military service.
---
id: set all concluded service parties dates
question: |
  When did the military service end?
subquestion: |
  Write the best date that you know for each party. Include a year.  Example: May 2024.
fields:
  - code: |
      [
        {
          "field": party.attr_name("service_ended_date"),
          "label": party.name_full(),
          "under text": "Date service ended"
        }
        for party
        in
        sorted(users.union(other_parties + additional_parties))          
        if party.military_status == "past"
      ]
continue button field: set_concluded_service_dates
---
id: unsure military service
question: |
  Because you are unsure about the military status of some parties
subquestion: |
  If you select "unsure" for any party, the judge may make you pay
  a **bond** to protect the party's rights under the Servicemembers Civil Relief Act,
  before the judge makes the judgment against the party final.

  ${ collapse_template(explain_military_unsure_bond) }
fields:
  - I understand I may have to pay a bond if I am unsure about a party's military status before a judge makes the judgment final: bond_agreement_i_understand
    datatype: yesno
validation code: |
  if not bond_agreement_i_understand:
    validation_error("You must acknowledge that the judge can make you a bond if you are unsure about a party's military status.", field="bond_agreement_i_understand")
---
template: explain_military_unsure_bond
subject: |
  What is the bond for?
content: |
  If you are unsure about the military status of any party in this case, the judge may require you to pay a bond to protect the party's rights under the Servicemembers Civil Relief Act.

  The bond is money that you pay to the court. If the party is in the military, the bond will protect their rights under the Servicemembers Civil Relief Act. 
  If the party is not in the military, the bond will be returned to you.

  The bond is only required if the other party does not show up in court
  and loses "by default".
---
id: confirm serving party status
question: |
  Confirm the military status of each party
subquestion: |
  Here is what you told us about each party:

  ${ all_party_status_review_table }

  ${ action_button_html(url_action('set_all_military_statuses'), label="Edit military service status")}
continue button field: review_military_status
---
table: all_party_status_review_table
rows: users.union(other_parties + additional_parties)
columns:
  - Name: |
      row_item.name_full()
  # Find the first matching key in the military_status_labels list and show the matching text - this is for translation
  - In active service?: |
      next((k for d in military_status_labels for k, v in d.items() if v == row_item.military_status), "")
---
code: |
  form_filled_by_attorney = bool(len(attorneys))    
---
id: your name
sets:
    - users[0].name.first
    - users[0].name.last
    - users[0].name.middle
    - users[0].name.suffix
question:  |
  % if form_filled_by_attorney:
  What is your client's name?
  % else:
  What is your name?
  % endif
subquestion: |
  If this case is "in the interests of" someone else, enter their name here.

  For example, if this case is for a guardianship or conservatorship, enter
  the name of the person who needs the guardian or conservator.
fields:
  - code: |
      users[0].name_fields()
---
id: has additional parties
question: |
  Is there someone else with an interest in this case?
subquestion: |
  For example, if this is a guardianship or conservatorship case, you may have to list the
  parents or other relatives of the person who needs a guardian as well
  as your own name.
fields:
  - There is someone else with an interest in this case: additional_parties.there_are_any
    datatype: yesnoradio
  - note: |
      We will call this person an **additional party** in the rest of this interview.
    show if: additional_parties.there_are_any
---
id: additional party name i
sets:
  - additional_parties[i].name.first
  - additional_parties[i].name.last
  - additional_parties[i].name.middle
  - additional_parties[i].name.suffix
question: |
  What is the name of the ${ ordinal(i ) } additional party in this case?
subquestion: |
  % if len(additional_parties.complete_elements()) >= 1:
  You have already told us about ${ additional_parties.complete_elements() }.
  % endif
fields:
  - code: |
      additional_parties[i].name_fields()
---
id: supporting the affidavit
question: |
  How do you know the military status of the parties in this case?
fields:
  - "Did you use the Servicemembers Civil Relief Act Website?": has_used_scra_site
    datatype: yesnoradio
  - note: |
      You need to give the court a copy of your search results
    show if: has_used_scra_site
  - Are you ready to attach a copy or screenshot now?: wants_to_attach_search_results
    datatype: yesnoradio
    show if: has_used_scra_site
  - Attach a copy of the search results: used_scra_site_attachment
    datatype: file
    file css class: None
    accept: |
      ".pdf, .png, application/pdf, image/*"
    show if: wants_to_attach_search_results
  - "Explain how you used the website in your search (optional if evidence attached)": used_scra_site_facts
    required: False
    input type: area
    show if: has_used_scra_site
  - Explain how you know: not_used_scra_site_facts
    input type: area
    show if:
      variable: has_used_scra_site
      is: False
    help: |
      For example: I know the party personally.
---
code: |
  signature_fields = ['users[0].signature']

---
id: military affidavit review screen
# event: review_military_affidavit
question: |
  Review your answers
review:
  - Edit: trial_court
    button: |
      **Trial court**
  
      % if defined("trial_court.department"):
      * department: ${ trial_court.department }
      % endif
      % if defined("trial_court.division"):
      * division: ${ trial_court.division }
      % endif
  - Edit: users.revisit
    button: |
      **People on your side of the case**

      % for item in users:
        * ${ item }
      % endfor
  - Edit: other_parties.revisit
    button: |
      **People on the other side of the case**

      % for item in other_parties:
        * ${ item }
      % endfor
  - Edit: additional_parties.revisit
    button: |
      **Other people with an interest in this case**

      % for item in additional_parties:
        * ${ item }
      % endfor
  - Edit: docket_numbers.revisit
    button: |
      **Docket numbers**

      % for item in docket_numbers:
        * ${ item }
      % endfor
  - note: |
      **Military status of parties**

      Here is what you told us:

      % if len(serving_parties):
      % if len(serving_parties) == 1:
      * You know that ${ serving_parties } is currently serving in the military.
      % else:
      * You know that ${ serving_parties } are currently serving in the military.
      % endif
      % endif
      % if len(concluded_service_parties):
      * You know that ${ concluded_service_parties } served in the military in the past.
      % endif
      % if len(unsure_serving_parties):
      * You do not know whether ${ unsure_serving_parties } served in the military.
      % endif

      % if len(( users.union(other_parties + additional_parties).difference(serving_parties + concluded_service_parties + unsure_serving_parties))):
      That means that you know the following parties are **not** serving in the military:

      * ${ comma_and_list( users.union(other_parties + additional_parties).difference(serving_parties + concluded_service_parties + unsure_serving_parties)) }
      % endif

      If this is not correct, edit your responses by clicking the button below.

      * ${ action_button_html(url_action('serving_parties'), label="Edit parties currently serving in the military")}
      * ${ action_button_html(url_action('concluded_service_parties'), label="Edit parties whose service ended")}
      * ${ action_button_html(url_action('unsure_serving_parties'), label="Edit parties you do not know about")}

  - Edit: signature_date
    button: |
      **Date of signature**:
      ${ signature_date }
  - Edit: bbo
    button: |
      **BBO number (if you are an attorney)**:
      ${ bbo }
---
continue button field: plaintiffs.revisit
question: |
  Edit plaintiffs
subquestion: |
  ${ plaintiffs.table }

  ${ plaintiffs.add_action() }
---
table: plaintiffs.table
rows: plaintiffs
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
continue button field: defendants.revisit
question: |
  Edit defendants
subquestion: |
  ${ defendants.table }

  ${ defendants.add_action() }
---
table: defendants.table
rows: defendants
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
continue button field: docket_numbers.revisit
question: |
  Edit docket_numbers
subquestion: |
  ${ docket_numbers.table }

  ${ docket_numbers.add_action() }
---
table: docket_numbers.table
rows: docket_numbers
columns:
  - Name: |
      row_item
edit: True
confirm: True

---
continue button field: users.revisit
question: |
  Edit users
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Signature: |
      row_item.signature if defined("row_item.signature") else ""
edit:
  - name.first
  - signature
confirm: True

---
# ALDocument objects specify the metadata for each template
objects:
  - military_affidavit_attachment: ALDocument.using(title="Military Affidavit", filename="military_affidavit", has_addendum=False, )
  - military_affidavit_search_results: ALDocumentUpload.using(title="Search results from SCRA website", filename="military_affidavit_search_results", has_addendum=False, )
---
objects:
  - military_affidavit_bundle: ALDocumentBundle.using(elements=[military_affidavit_attachment, military_affidavit_search_results], filename="military_affidavit", title="Military Affidavit", enabled=True)
---
code: |
  military_affidavit_search_results.enabled = has_used_scra_site and wants_to_attach_search_results
---
code: |
  military_affidavit_attachment.enabled = True
---
code: |
  # This is available to customize in other forms with more complex case name scenarios
  # Leave it undefined to use the default case name of petitioner v respondent or In the interests of respondent
  military_affidavit_case_name = ""
---
need:
  - military_affidavit_case_name
attachment:
  name: military affidavit
  filename: military_affidavit
  variable name: military_affidavit_attachment[i]
  skip undefined: True
  pdf template file: military_affidavit.pdf
  # editable: False
  fields:
      - "docket_number": ${ docket_numbers }      
      - "court_department_district": ${trial_court.department == "District Court"}
      - "court_department_bmc": ${trial_court.department == "Boston Municipal Court"}
      - "court_department_housing": ${trial_court.department == "Housing Court"}
      - "court_department_juvenile": ${trial_court.department == "Juvenile Court"}
      - "court_department_land": ${trial_court.department == "Land Court"}
      - "court_department_probate_family": ${trial_court.department == "Probate and Family Court"}
      - "court_department_superior": ${trial_court.department == "Superior Court"}
      - "trial_court_division": ${ trial_court.division }
      - "petitioners": |
          % if showifdef("military_affidavit_case_name"):
          ${ military_affidavit_case_name }
          % else:
            % if user_ask_role == "plaintiff":
            % if len(other_parties):
          ${ users }
            % else:
          In the interests of ${ users }
            % endif
            % else:
          ${ other_parties }
            % endif
          % endif
      - "respondents": |
          % if user_ask_role == "defendant":
          ${ users }
          % else:
          ${ other_parties }
          % endif
      - "users1_name_full__1": |
          ${ users[0] }
      - "date_signed__1": ${ today() }
      - "has_serving_parties": ${ any([party.military_status == "yes" for party in users.union(other_parties + additional_parties)]) }
      - "serving_parties": ${ comma_and_list([party.name_full() for party in users.union(other_parties + additional_parties) if party.military_status == "yes"]) }
      - "has_not_serving_parties": ${ any([party.military_status == "no" for party in users.union(other_parties + additional_parties)]) }
      - "not_serving_parties": ${ comma_and_list( [party.name_full() for party in users.union(other_parties + additional_parties) if party.military_status == "no"] ) }
      - "has_concluded_service_parties": ${ any([party.military_status == "past" for party in users.union(other_parties + additional_parties)]) }
      - "concluded_service_parties_date": |
          ${ comma_and_list([f"{party.name_full()}: {party.service_ended_date}" for party in users.union(other_parties + additional_parties) if party.military_status == "past"]) }
      - "has_unsure_serving_parties": ${ any([party.military_status == "unknown" for party in users.union(other_parties + additional_parties)]) }
      - "unsure_serving_parties": ${ comma_and_list([party.name_full() for party in users.union(other_parties + additional_parties) if party.military_status == "unknown"]) }
      - "has_used_scra_site": ${ has_used_scra_site }
      - "used_scra_site_facts": |
          % if has_used_scra_site:
          ${ used_scra_site_facts }
          % endif
      - "has_not_used_scra_site": ${not has_used_scra_site}
      - "not_used_scra_site_facts": |
          % if not has_used_scra_site:
          ${not_used_scra_site_facts }
          % endif
      - "users1_signature": |
          ${ users[0].signature_if_final(i) }
      - "date_signed__2": ${ today() }
      - "users1_name_full__2": ${users[0]}
      - "users1_address_on_one_line": ${users[0].address.on_one_line()}
      - "users1_phone": ${users[0].phone_numbers() }
      - "bbo": ${bbo}
      - "users1_email": ${users[0].email}
---
code: |
  military_affidavit_bundle.enabled = True