---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ALMassachusetts:al_massachusetts.yml
  - docassemble.MassAccess:massaccess.yml
---
metadata:
  title: |
    Military Affidavit
  short title: |
    Military Affidavit
  authors:
    - Pratibha Bharti
---
mandatory: True
comment: |
  Global interview metadata
variable name: interview_metadata["military_affidavit"]
data:
  al_weaver_version: "1.8.0"
  generated on: "2023-02-28"
  title: >-
    Military Affidavit
  short title: >-
    Military Affidavit
  description: |-
    Affidavit Declaring whether the party is a military servicemember
  allowed courts: 
    - "Boston Municipal Court"
    - "District Court"
    - "Housing Court"
    - "Juvenile Court"
    - "Land Court"
    - "Probate and Family Court"
    - "Superior Court"
  categories:
    - "ED-00-00-00-00"
    - "MO-00-00-00-00"
    - "HE-00-00-00-00"
    - "IM-00-00-00-00"
    - "BE-00-00-00-00"
    - "FA-07-00-00-00"
    - "HO-00-00-00-00"
    - "BE-04-00-00-00"
    - "ES-00-00-00-00"
    - "RI-10-00-00-00"
    - "FA-00-00-00-00"
  typical role: "unknown"
  generate download screen: True
---
code: |
  interview_metadata['main_interview_key'] =  'military_affidavit'
---
code: |
  addresses_to_search = [users[0].address]
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MA"
---
code: |
  github_repo_name =  'docassemble-MilitaryAffidavit'
---
code: |
  interview_short_title = "File a military affidavit"
---
code: |
  al_form_type = "existing_case" 
---
objects:
  - users: ALPeopleList.using(there_are_any=True)
  - other_parties: ALPeopleList.using(there_are_any=True)
  - serving_parties: ALPeopleList.using(there_are_any=True)
  - unsure_serving_parties: ALPeopleList.using(there_are_any=True)
  - not_serving_parties: ALPeopleList.using(there_are_any=True)
  - concluded_service_parties: ALPeopleList.using(auto_gather=True, complete_attribute="complete", target_number=1)
---
sections:
  - review_military_affidavit: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_military_affidavit
code: |
  # Set the allowed courts for this interview
  allowed_courts = interview_metadata["military_affidavit"]["allowed courts"]
  nav.set_section("review_military_affidavit")
  form_filled_by_attorney
  user_ask_role
  users.gather()
  other_parties.gather()
  plaintiffs
  defendants
  serving_parties
  if len(serving_parties) < len(users) + len(other_parties):
    concluded_service_parties
    if len(concluded_service_parties.elements):
      set_concluded_service_dates
    for party in concluded_service_parties.elements:
      party.service_ended_date
  if len(serving_parties) + len(concluded_service_parties) < len(users) + len(other_parties):
    unsure_serving_parties
  if len(serving_parties) + len(concluded_service_parties) + len(unsure_serving_parties) < len(users) + len(other_parties):
    confirm_not_serving_parties
  trial_court
  docket_numbers
  has_used_scra_site
  set_progress(48)
  signature_date
  interview_order_military_affidavit = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  military_affidavit_intro
  interview_order_military_affidavit
  signature_date
  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  military_affidavit_download
---
code: |
  concluded_service_parties[i].name.first
  concluded_service_parties[i].concluded_service_parties_date
  concluded_service_parties[i].complete = True
---
comment: |
  This question is used to introduce your interview. Please customize
id: Military_Affidavit
continue button field: military_affidavit_intro
question: |
  Military Affidavit
subquestion: |
  This interview will help you fill out a Military Affidavit,
  which declares whether anybody who is part of this case is
  currently serving in a branch of the U.S. military.

  If someone is in the military, they may have special
  protections under the Servicemembers Civil Relief Act.

  This affidavit has to be filed even if none of the parties
  in the military right now.

  Use the best information you know. But you must explain either that:

  * you know the military status of each party, or 
  * you searched the [Servicemembers Civil Relief Act website](https://scra.dmdc.osd.mil/)
    to find out their military status
---
id: explanation diligent search
question: |
  Before you answer the next questions
subquestion: |
  On the next few screens, we will ask you about the military status 
  for:

  * ${ users }
  * ${ other_parties }
fields:
  - Do you already know the military status of **each** party in this case?: knows_status_already
    datatype: yesno
  - note: |
      If you do not have personal knowledge of each party's military status,
      you **must** search the [Servicemembers Civil Relief Act website](https://scra.dmdc.osd.mil/).

      1. Copy a [link to this interview](${ interview_url() }) to return to it later. You can also 
         leave this window or tab open.
      1. Click the link to visit the [Servicemembers Civil Relief Act website](https://scra.dmdc.osd.mil/)
         and search for the name of the party who you are unsure about.
      1. **Save** a copy of the results as a PDF or take a screenshot that shows the search
         results. You can also print a copy and attach it to this form later.

        You can take a minute to do that now. The website will open in a new tab. When
        you have finished your search and saved the results, close the tab to return to this interview.
---
id: Military status of serving parties
question: |
  Are any of the parties in this case currently serving in the U.S. military?
fields:
  - Choose every party who you know is in the military **now**: serving_parties
    datatype: object_checkboxes
    choices:
      - users
      - other_parties
---
id: ended military service
question: |
  Did any of the parties in this case serve in the military **in the past**?
fields:
  - Choose every party who you know used to serve in the U.S. military:  concluded_service_parties
    datatype: object_checkboxes
    choices:
      - users
      - other_parties
    exclude:
      - serving_parties
---
id: concluded service parties date
question: |
  When did the military service end?
fields:
  - "End date": concluded_service_parties[i].concluded_service_parties_date
    datatype: date
---
id: set all concluded service parties dates
question: |
  When did the military service end?
fields:
  - code: |
      [
        {
          "field": party.attr_name("service_ended_date"),
          "label": f"Date that { party.name_full() } ended military service",
        }
        for party
        in concluded_service_parties.elements
      ]
continue button field: set_concluded_service_dates
---
id: unsure military service
question: |
  Are you unsure about whether any of the parties in this case served in the military?
fields:
  - Choose every party who you are unsure about: unsure_serving_parties
    datatype: object_checkboxes
    choices:
      - users
      - other_parties
    exclude:
      - serving_parties
      - concluded_service_parties
---
id: confirm not serving parties
question: |
  Parties **not** serving in the military
subquestion: |
  Here is what you told us so far:

  % if len(serving_parties):
  % if len(serving_parties) == 1:
  * You know that ${ serving_parties } is currently serving in the military.
  % else:
  * You know that ${ serving_parties } are currently serving in the military.
  % endif
  % endif
  % if len(concluded_service_parties):
  * You know that ${ concluded_service_parties } served in the military in the past.
  % endif
  % if len(unsure_serving_parties):
  * You do not know whether ${ unsure_serving_parties } served in the military.
  % endif

  That means that you know the following parties are **not** serving in the military:

  * ${ comma_and_list( users.union(other_parties).difference(serving_parties + concluded_service_parties + unsure_serving_parties)) }

  If this is not correct, edit your responses by clicking the button below.

  * ${ action_button_html(url_action('serving_parties'), label="Edit serving parties")}
  * ${ action_button_html(url_action('concluded_service_parties'), label="Edit concluded service parties")}
  * ${ action_button_html(url_action('unsure_serving_parties'), label="Edit unsure serving parties")}
continue button field: confirm_not_serving_parties
---
id: form_filled_by_attorney
question: |
  Are you an attorney for someone in this case?
fields:
  - I am: form_filled_by_attorney
    datatype: radio
    choices:
      - An attorney in this case: True
      - A party to the case: False
  - BBO number (for Massachusetts attorneys): bbo
    maxlength: 56
    required: False
    show if: form_filled_by_attorney
---
id: your name
sets:
    - users[0].name.first
    - users[0].name.last
    - users[0].name.middle
    - users[0].name.suffix
question:  |
  % if form_filled_by_attorney:
  What is your client's name?
  % else:
  What is your name?
  % endif
fields:
  - code: |
      users[0].name_fields()
---
id: supporting the affidavit
question: |
  How do you know the military status of the parties in this case?
subquestion: |
  Here's what you told us:

  % if len(serving_parties):
  % if len(serving_parties) == 1:
  * You know that ${ serving_parties } is currently serving in the military.
  % else:
  * You know that ${ serving_parties } are currently serving in the military.
  % endif
  % endif
  % if len(concluded_service_parties):
  * You know that ${ concluded_service_parties } served in the military in the past.
  % endif
  % if len(unsure_serving_parties):
  * You do not know whether ${ unsure_serving_parties } served in the military.
  % endif

  % if len(( users.union(other_parties).difference(serving_parties + concluded_service_parties + unsure_serving_parties))):
  That means that you know the following parties are **not** serving in the military:

  * ${ comma_and_list( users.union(other_parties).difference(serving_parties + concluded_service_parties + unsure_serving_parties)) }
  % endif

  If this is not correct, edit your responses by clicking the button below.

  * ${ action_button_html(url_action('serving_parties'), label="Edit serving parties")}
  * ${ action_button_html(url_action('concluded_service_parties'), label="Edit concluded service parties")}
  * ${ action_button_html(url_action('unsure_serving_parties'), label="Edit unsure serving parties")}

fields:
  - "Did you use the Servicemembers Civil Relief Act Website?": has_used_scra_site
    datatype: yesnoradio
  - note: |
      You need to attach copies of the search results to this form
    show if: has_used_scra_site
  - Are you ready to attach a copy or screenshot now?: wants_to_attach_search_results
    datatype: yesnoradio
    show if: has_used_scra_site
  - Attach a copy of the search results: used_scra_site_attachment
    datatype: file
    file css class: None
    accept: |
      ".pdf, .png, application/pdf, image/*"
    show if: wants_to_attach_search_results
  - "Explain how you used the website in your search (optional if evidence attached)": used_scra_site_facts
    required: False
    input type: area
    show if: has_used_scra_site
  - Explain how you know: not_used_scra_site_facts
    input type: area
    show if:
      variable: has_used_scra_site
      is: False
---
code: |
  signature_fields = ['users[0].signature']

---
id: military affidavit review screen
event: review_military_affidavit
question: |
  Review your answers
review:
  - Edit: trial_court
    button: |
      **Trial court**
  
      % if defined("trial_court.department"):
      * department: ${ trial_court.department }
      % endif
      % if defined("trial_court.division"):
      * division: ${ trial_court.division }
      % endif
  - Edit: plaintiffs.revisit
    button: |
      **Plaintiffs**

      % for item in plaintiffs:
        * ${ item }
      % endfor
  - Edit: defendants.revisit
    button: |
      **Defendants**

      % for item in defendants:
        * ${ item }
      % endfor
  - Edit: docket_numbers.revisit
    button: |
      **Docket numbers**

      % for item in docket_numbers:
        * ${ item }
      % endfor
  - Edit: users.revisit
    button: |
      **Users**

      % for item in users:
        * ${ item }
      % endfor
  - Edit: has_serving_parties
    button: |
      **Are any of the parties in this case currently serving in the military?**:
      ${ has_serving_parties }
  - Edit: serving_parties
    button: |
      **Serving parties**:
      > ${ single_paragraph(serving_parties) }
  - Edit: has_not_serving_parties
    button: |
      **Are any of the parties in this case not currently serving in the military?**:
      ${ has_not_serving_parties }
  - Edit: not_serving_parties
    button: |
      **Not serving parties**:
      > ${ single_paragraph(not_serving_parties) }
  - Edit: has_unsure_serving_parties
    button: |
      **Are you unsure about whether any of the parties in this case served in the military?**:
      ${ has_unsure_serving_parties }
  - Edit: unsure_serving_parties
    button: |
      **Unsure serving parties**:
      > ${ single_paragraph(unsure_serving_parties) }
  - Edit: signature_date
    button: |
      **Date of signature**:
      ${ signature_date }
  - Edit: bbo
    button: |
      **BBO number (if you are an attorney)**:
      ${ bbo }
---
continue button field: plaintiffs.revisit
question: |
  Edit plaintiffs
subquestion: |
  ${ plaintiffs.table }

  ${ plaintiffs.add_action() }
---
table: plaintiffs.table
rows: plaintiffs
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
continue button field: defendants.revisit
question: |
  Edit defendants
subquestion: |
  ${ defendants.table }

  ${ defendants.add_action() }
---
table: defendants.table
rows: defendants
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
continue button field: docket_numbers.revisit
question: |
  Edit docket_numbers
subquestion: |
  ${ docket_numbers.table }

  ${ docket_numbers.add_action() }
---
table: docket_numbers.table
rows: docket_numbers
columns:
  - Name: |
      row_item
edit: True
confirm: True

---
continue button field: users.revisit
question: |
  Edit users
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Signature: |
      row_item.signature if defined("row_item.signature") else ""
edit:
  - name.first
  - signature
confirm: True

---
id: download military_affidavit
event: military_affidavit_download
question: |
  All done
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_military_affidavit'), label='Edit answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

progress: 100
---
# ALDocument objects specify the metadata for each template
objects:
  - military_affidavit_attachment: ALDocument.using(title="Military Affidavit", filename="military_affidavit", enabled=True, has_addendum=False, )
  - military_affidavit_search_results: ALDocumentUpload.using(title="Search results from SCRA website", filename="military_affidavit_search_results", has_addendum=False, )
---
code: |
  military_affidavit_search_results.enabled = has_used_scra_site and wants_to_attach_search_results
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[military_affidavit_attachment], filename="military_affidavit", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=[military_affidavit_attachment],  filename="military_affidavit", title="All forms to deliver to court", enabled=True)

---
attachment:
  name: military affidavit
  filename: military_affidavit
  variable name: military_affidavit_attachment[i]
  skip undefined: True
  pdf template file: military_affidavit.pdf
  fields:
      - "docket_number": ${ docket_numbers }
      - "court_department_district": ${trial_court.department == "District Court"}
      - "court_department_bmc": ${trial_court.department == "Boston Municipal Court"}
      - "court_department_housing": ${trial_court.department == "Housing Court"}
      - "court_department_juvenile": ${trial_court.department == "Juvenile Court"}
      - "court_department_land": ${trial_court.department == "Land Court"}
      - "court_department_probate_family": ${trial_court.department == "Probate and Family Court"}
      - "court_department_superior": ${trial_court.department == "Superior Court"}
      - "petitioners":  |
          ${ plaintiffs }
      - "trial_court_division": ${ trial_court.division }
      - "respondents": |
          ${ defendants }
      - "users1_name_full__1": ${ users[0] }
      - "date_signed__1": ${""}
      - "has_serving_parties": ${ len(serving_parties) }
      - "serving_parties": ${ serving_parties }
      - "has_not_serving_parties": ${ len(users.union(other_parties).difference(serving_parties + concluded_service_parties + unsure_serving_parties)) >= 1 }
      - "not_serving_parties": ${ comma_and_list( users.union(other_parties).difference(serving_parties + concluded_service_parties + unsure_serving_parties)) }
      - "has_concluded_service_parties": ${ len(concluded_service_parties)}
      - "concluded_service_parties": ${concluded_service_parties_names_list}
      - "concluded_service_parties_date": ${comma_and_list(concluded_service_parties_dates_list)}
      - "has_unsure_serving_parties": ${ has_unsure_serving_parties }
      - "unsure_serving_parties": ${ unsure_serving_parties_names_list }
      - "has_used_scra_site": ${has_used_scra_site}
      - "has_used_scra_site_facts": ${ has_used_scra_site }
      - "used_scra_site_facts": ${used_scra_site_facts if has_used_scra_site else ""}
      - "has_not_used_scra_site": ${not has_used_scra_site}
      - "not_used_scra_site_facts": ${not_used_scra_site_facts if not has_used_scra_site else ""}
      - "users1_signature": |
          ${ "" }
      - "date_signed__2": ${""}
      - "users1_name_full__2": ${users[0]}
      - "users1_address_on_one_line": ${users[0].address.on_one_line()}
      - "users1_phone": ${users[0].phone_number}
      - "bbo": ${bbo}
      - "users1_email": ${users[0].email}
---

